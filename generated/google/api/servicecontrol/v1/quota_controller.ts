/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: google/api/servicecontrol/v1/quota_controller.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../annotations";
import * as dependency_2 from "./metric_value";
import * as dependency_3 from "./../../../rpc/status";
import * as dependency_4 from "./../../client";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace google.api.servicecontrol.v1 {
    export class AllocateQuotaRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            service_name?: string;
            allocate_operation?: QuotaOperation;
            service_config_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("service_name" in data && data.service_name != undefined) {
                    this.service_name = data.service_name;
                }
                if ("allocate_operation" in data && data.allocate_operation != undefined) {
                    this.allocate_operation = data.allocate_operation;
                }
                if ("service_config_id" in data && data.service_config_id != undefined) {
                    this.service_config_id = data.service_config_id;
                }
            }
        }
        get service_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set service_name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get allocate_operation() {
            return pb_1.Message.getWrapperField(this, QuotaOperation, 2) as QuotaOperation;
        }
        set allocate_operation(value: QuotaOperation) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_allocate_operation() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get service_config_id() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set service_config_id(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            service_name?: string;
            allocate_operation?: ReturnType<typeof QuotaOperation.prototype.toObject>;
            service_config_id?: string;
        }): AllocateQuotaRequest {
            const message = new AllocateQuotaRequest({});
            if (data.service_name != null) {
                message.service_name = data.service_name;
            }
            if (data.allocate_operation != null) {
                message.allocate_operation = QuotaOperation.fromObject(data.allocate_operation);
            }
            if (data.service_config_id != null) {
                message.service_config_id = data.service_config_id;
            }
            return message;
        }
        toObject() {
            const data: {
                service_name?: string;
                allocate_operation?: ReturnType<typeof QuotaOperation.prototype.toObject>;
                service_config_id?: string;
            } = {};
            if (this.service_name != null) {
                data.service_name = this.service_name;
            }
            if (this.allocate_operation != null) {
                data.allocate_operation = this.allocate_operation.toObject();
            }
            if (this.service_config_id != null) {
                data.service_config_id = this.service_config_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.service_name.length)
                writer.writeString(1, this.service_name);
            if (this.has_allocate_operation)
                writer.writeMessage(2, this.allocate_operation, () => this.allocate_operation.serialize(writer));
            if (this.service_config_id.length)
                writer.writeString(4, this.service_config_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AllocateQuotaRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AllocateQuotaRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.service_name = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.allocate_operation, () => message.allocate_operation = QuotaOperation.deserialize(reader));
                        break;
                    case 4:
                        message.service_config_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AllocateQuotaRequest {
            return AllocateQuotaRequest.deserialize(bytes);
        }
    }
    export class QuotaOperation extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_id?: string;
            method_name?: string;
            consumer_id?: string;
            labels?: Map<string, string>;
            quota_metrics?: dependency_2.google.api.servicecontrol.v1.MetricValueSet[];
            quota_mode?: QuotaOperation.QuotaMode;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [5], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_id" in data && data.operation_id != undefined) {
                    this.operation_id = data.operation_id;
                }
                if ("method_name" in data && data.method_name != undefined) {
                    this.method_name = data.method_name;
                }
                if ("consumer_id" in data && data.consumer_id != undefined) {
                    this.consumer_id = data.consumer_id;
                }
                if ("labels" in data && data.labels != undefined) {
                    this.labels = data.labels;
                }
                if ("quota_metrics" in data && data.quota_metrics != undefined) {
                    this.quota_metrics = data.quota_metrics;
                }
                if ("quota_mode" in data && data.quota_mode != undefined) {
                    this.quota_mode = data.quota_mode;
                }
            }
            if (!this.labels)
                this.labels = new Map();
        }
        get operation_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set operation_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get method_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set method_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get consumer_id() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set consumer_id(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get labels() {
            return pb_1.Message.getField(this, 4) as any as Map<string, string>;
        }
        set labels(value: Map<string, string>) {
            pb_1.Message.setField(this, 4, value as any);
        }
        get quota_metrics() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.google.api.servicecontrol.v1.MetricValueSet, 5) as dependency_2.google.api.servicecontrol.v1.MetricValueSet[];
        }
        set quota_metrics(value: dependency_2.google.api.servicecontrol.v1.MetricValueSet[]) {
            pb_1.Message.setRepeatedWrapperField(this, 5, value);
        }
        get quota_mode() {
            return pb_1.Message.getFieldWithDefault(this, 6, QuotaOperation.QuotaMode.UNSPECIFIED) as QuotaOperation.QuotaMode;
        }
        set quota_mode(value: QuotaOperation.QuotaMode) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            operation_id?: string;
            method_name?: string;
            consumer_id?: string;
            labels?: {
                [key: string]: string;
            };
            quota_metrics?: ReturnType<typeof dependency_2.google.api.servicecontrol.v1.MetricValueSet.prototype.toObject>[];
            quota_mode?: QuotaOperation.QuotaMode;
        }): QuotaOperation {
            const message = new QuotaOperation({});
            if (data.operation_id != null) {
                message.operation_id = data.operation_id;
            }
            if (data.method_name != null) {
                message.method_name = data.method_name;
            }
            if (data.consumer_id != null) {
                message.consumer_id = data.consumer_id;
            }
            if (typeof data.labels == "object") {
                message.labels = new Map(Object.entries(data.labels));
            }
            if (data.quota_metrics != null) {
                message.quota_metrics = data.quota_metrics.map(item => dependency_2.google.api.servicecontrol.v1.MetricValueSet.fromObject(item));
            }
            if (data.quota_mode != null) {
                message.quota_mode = data.quota_mode;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_id?: string;
                method_name?: string;
                consumer_id?: string;
                labels?: {
                    [key: string]: string;
                };
                quota_metrics?: ReturnType<typeof dependency_2.google.api.servicecontrol.v1.MetricValueSet.prototype.toObject>[];
                quota_mode?: QuotaOperation.QuotaMode;
            } = {};
            if (this.operation_id != null) {
                data.operation_id = this.operation_id;
            }
            if (this.method_name != null) {
                data.method_name = this.method_name;
            }
            if (this.consumer_id != null) {
                data.consumer_id = this.consumer_id;
            }
            if (this.labels != null) {
                data.labels = (Object.fromEntries)(this.labels);
            }
            if (this.quota_metrics != null) {
                data.quota_metrics = this.quota_metrics.map((item: dependency_2.google.api.servicecontrol.v1.MetricValueSet) => item.toObject());
            }
            if (this.quota_mode != null) {
                data.quota_mode = this.quota_mode;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.operation_id.length)
                writer.writeString(1, this.operation_id);
            if (this.method_name.length)
                writer.writeString(2, this.method_name);
            if (this.consumer_id.length)
                writer.writeString(3, this.consumer_id);
            for (const [key, value] of this.labels) {
                writer.writeMessage(4, this.labels, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (this.quota_metrics.length)
                writer.writeRepeatedMessage(5, this.quota_metrics, (item: dependency_2.google.api.servicecontrol.v1.MetricValueSet) => item.serialize(writer));
            if (this.quota_mode != QuotaOperation.QuotaMode.UNSPECIFIED)
                writer.writeEnum(6, this.quota_mode);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QuotaOperation {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QuotaOperation();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.operation_id = reader.readString();
                        break;
                    case 2:
                        message.method_name = reader.readString();
                        break;
                    case 3:
                        message.consumer_id = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.labels as any, reader, reader.readString, reader.readString));
                        break;
                    case 5:
                        reader.readMessage(message.quota_metrics, () => pb_1.Message.addToRepeatedWrapperField(message, 5, dependency_2.google.api.servicecontrol.v1.MetricValueSet.deserialize(reader), dependency_2.google.api.servicecontrol.v1.MetricValueSet));
                        break;
                    case 6:
                        message.quota_mode = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QuotaOperation {
            return QuotaOperation.deserialize(bytes);
        }
    }
    export namespace QuotaOperation {
        export enum QuotaMode {
            UNSPECIFIED = 0,
            NORMAL = 1,
            BEST_EFFORT = 2,
            CHECK_ONLY = 3,
            QUERY_ONLY = 4,
            ADJUST_ONLY = 5
        }
    }
    export class AllocateQuotaResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_id?: string;
            allocate_errors?: QuotaError[];
            quota_metrics?: dependency_2.google.api.servicecontrol.v1.MetricValueSet[];
            service_config_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_id" in data && data.operation_id != undefined) {
                    this.operation_id = data.operation_id;
                }
                if ("allocate_errors" in data && data.allocate_errors != undefined) {
                    this.allocate_errors = data.allocate_errors;
                }
                if ("quota_metrics" in data && data.quota_metrics != undefined) {
                    this.quota_metrics = data.quota_metrics;
                }
                if ("service_config_id" in data && data.service_config_id != undefined) {
                    this.service_config_id = data.service_config_id;
                }
            }
        }
        get operation_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set operation_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get allocate_errors() {
            return pb_1.Message.getRepeatedWrapperField(this, QuotaError, 2) as QuotaError[];
        }
        set allocate_errors(value: QuotaError[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get quota_metrics() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.google.api.servicecontrol.v1.MetricValueSet, 3) as dependency_2.google.api.servicecontrol.v1.MetricValueSet[];
        }
        set quota_metrics(value: dependency_2.google.api.servicecontrol.v1.MetricValueSet[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get service_config_id() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set service_config_id(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            operation_id?: string;
            allocate_errors?: ReturnType<typeof QuotaError.prototype.toObject>[];
            quota_metrics?: ReturnType<typeof dependency_2.google.api.servicecontrol.v1.MetricValueSet.prototype.toObject>[];
            service_config_id?: string;
        }): AllocateQuotaResponse {
            const message = new AllocateQuotaResponse({});
            if (data.operation_id != null) {
                message.operation_id = data.operation_id;
            }
            if (data.allocate_errors != null) {
                message.allocate_errors = data.allocate_errors.map(item => QuotaError.fromObject(item));
            }
            if (data.quota_metrics != null) {
                message.quota_metrics = data.quota_metrics.map(item => dependency_2.google.api.servicecontrol.v1.MetricValueSet.fromObject(item));
            }
            if (data.service_config_id != null) {
                message.service_config_id = data.service_config_id;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_id?: string;
                allocate_errors?: ReturnType<typeof QuotaError.prototype.toObject>[];
                quota_metrics?: ReturnType<typeof dependency_2.google.api.servicecontrol.v1.MetricValueSet.prototype.toObject>[];
                service_config_id?: string;
            } = {};
            if (this.operation_id != null) {
                data.operation_id = this.operation_id;
            }
            if (this.allocate_errors != null) {
                data.allocate_errors = this.allocate_errors.map((item: QuotaError) => item.toObject());
            }
            if (this.quota_metrics != null) {
                data.quota_metrics = this.quota_metrics.map((item: dependency_2.google.api.servicecontrol.v1.MetricValueSet) => item.toObject());
            }
            if (this.service_config_id != null) {
                data.service_config_id = this.service_config_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.operation_id.length)
                writer.writeString(1, this.operation_id);
            if (this.allocate_errors.length)
                writer.writeRepeatedMessage(2, this.allocate_errors, (item: QuotaError) => item.serialize(writer));
            if (this.quota_metrics.length)
                writer.writeRepeatedMessage(3, this.quota_metrics, (item: dependency_2.google.api.servicecontrol.v1.MetricValueSet) => item.serialize(writer));
            if (this.service_config_id.length)
                writer.writeString(4, this.service_config_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AllocateQuotaResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AllocateQuotaResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.operation_id = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.allocate_errors, () => pb_1.Message.addToRepeatedWrapperField(message, 2, QuotaError.deserialize(reader), QuotaError));
                        break;
                    case 3:
                        reader.readMessage(message.quota_metrics, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.google.api.servicecontrol.v1.MetricValueSet.deserialize(reader), dependency_2.google.api.servicecontrol.v1.MetricValueSet));
                        break;
                    case 4:
                        message.service_config_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AllocateQuotaResponse {
            return AllocateQuotaResponse.deserialize(bytes);
        }
    }
    export class QuotaError extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: QuotaError.Code;
            subject?: string;
            description?: string;
            status?: dependency_3.google.rpc.Status;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("subject" in data && data.subject != undefined) {
                    this.subject = data.subject;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, QuotaError.Code.UNSPECIFIED) as QuotaError.Code;
        }
        set code(value: QuotaError.Code) {
            pb_1.Message.setField(this, 1, value);
        }
        get subject() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set subject(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get status() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.rpc.Status, 4) as dependency_3.google.rpc.Status;
        }
        set status(value: dependency_3.google.rpc.Status) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_status() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: QuotaError.Code;
            subject?: string;
            description?: string;
            status?: ReturnType<typeof dependency_3.google.rpc.Status.prototype.toObject>;
        }): QuotaError {
            const message = new QuotaError({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.subject != null) {
                message.subject = data.subject;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.status != null) {
                message.status = dependency_3.google.rpc.Status.fromObject(data.status);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: QuotaError.Code;
                subject?: string;
                description?: string;
                status?: ReturnType<typeof dependency_3.google.rpc.Status.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.subject != null) {
                data.subject = this.subject;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.status != null) {
                data.status = this.status.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != QuotaError.Code.UNSPECIFIED)
                writer.writeEnum(1, this.code);
            if (this.subject.length)
                writer.writeString(2, this.subject);
            if (this.description.length)
                writer.writeString(3, this.description);
            if (this.has_status)
                writer.writeMessage(4, this.status, () => this.status.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QuotaError {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QuotaError();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readEnum();
                        break;
                    case 2:
                        message.subject = reader.readString();
                        break;
                    case 3:
                        message.description = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.status, () => message.status = dependency_3.google.rpc.Status.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QuotaError {
            return QuotaError.deserialize(bytes);
        }
    }
    export namespace QuotaError {
        export enum Code {
            UNSPECIFIED = 0,
            RESOURCE_EXHAUSTED = 8,
            BILLING_NOT_ACTIVE = 107,
            PROJECT_DELETED = 108,
            API_KEY_INVALID = 105,
            API_KEY_EXPIRED = 112
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedQuotaControllerService {
        static definition = {
            AllocateQuota: {
                path: "/google.api.servicecontrol.v1.QuotaController/AllocateQuota",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: AllocateQuotaRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => AllocateQuotaRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: AllocateQuotaResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => AllocateQuotaResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract AllocateQuota(call: grpc_1.ServerUnaryCall<AllocateQuotaRequest, AllocateQuotaResponse>, callback: grpc_1.sendUnaryData<AllocateQuotaResponse>): void;
    }
    export class QuotaControllerClient extends grpc_1.makeGenericClientConstructor(UnimplementedQuotaControllerService.definition, "QuotaController", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        AllocateQuota: GrpcUnaryServiceInterface<AllocateQuotaRequest, AllocateQuotaResponse> = (message: AllocateQuotaRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<AllocateQuotaResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<AllocateQuotaResponse>, callback?: grpc_1.requestCallback<AllocateQuotaResponse>): grpc_1.ClientUnaryCall => {
            return super.AllocateQuota(message, metadata, options, callback);
        };
    }
}
