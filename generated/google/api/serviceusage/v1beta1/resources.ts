/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: google/api/serviceusage/v1beta1/resources.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../auth";
import * as dependency_2 from "./../../documentation";
import * as dependency_3 from "./../../endpoint";
import * as dependency_4 from "./../../monitored_resource";
import * as dependency_5 from "./../../monitoring";
import * as dependency_6 from "./../../quota";
import * as dependency_7 from "./../../usage";
import * as dependency_8 from "./../../../protobuf/api";
import * as pb_1 from "google-protobuf";
export namespace google.api.serviceusage.v1beta1 {
    export enum State {
        STATE_UNSPECIFIED = 0,
        DISABLED = 1,
        ENABLED = 2
    }
    export enum QuotaView {
        QUOTA_VIEW_UNSPECIFIED = 0,
        BASIC = 1,
        FULL = 2
    }
    export enum QuotaSafetyCheck {
        QUOTA_SAFETY_CHECK_UNSPECIFIED = 0,
        LIMIT_DECREASE_BELOW_USAGE = 1,
        LIMIT_DECREASE_PERCENTAGE_TOO_HIGH = 2
    }
    export class Service extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            parent?: string;
            config?: ServiceConfig;
            state?: State;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("parent" in data && data.parent != undefined) {
                    this.parent = data.parent;
                }
                if ("config" in data && data.config != undefined) {
                    this.config = data.config;
                }
                if ("state" in data && data.state != undefined) {
                    this.state = data.state;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get parent() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set parent(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get config() {
            return pb_1.Message.getWrapperField(this, ServiceConfig, 2) as ServiceConfig;
        }
        set config(value: ServiceConfig) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_config() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get state() {
            return pb_1.Message.getFieldWithDefault(this, 4, State.STATE_UNSPECIFIED) as State;
        }
        set state(value: State) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            name?: string;
            parent?: string;
            config?: ReturnType<typeof ServiceConfig.prototype.toObject>;
            state?: State;
        }): Service {
            const message = new Service({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.parent != null) {
                message.parent = data.parent;
            }
            if (data.config != null) {
                message.config = ServiceConfig.fromObject(data.config);
            }
            if (data.state != null) {
                message.state = data.state;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                parent?: string;
                config?: ReturnType<typeof ServiceConfig.prototype.toObject>;
                state?: State;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.parent != null) {
                data.parent = this.parent;
            }
            if (this.config != null) {
                data.config = this.config.toObject();
            }
            if (this.state != null) {
                data.state = this.state;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.parent.length)
                writer.writeString(5, this.parent);
            if (this.has_config)
                writer.writeMessage(2, this.config, () => this.config.serialize(writer));
            if (this.state != State.STATE_UNSPECIFIED)
                writer.writeEnum(4, this.state);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Service {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Service();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 5:
                        message.parent = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.config, () => message.config = ServiceConfig.deserialize(reader));
                        break;
                    case 4:
                        message.state = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Service {
            return Service.deserialize(bytes);
        }
    }
    export class ServiceConfig extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            title?: string;
            apis?: dependency_8.google.protobuf.Api[];
            documentation?: dependency_2.google.api.Documentation;
            quota?: dependency_6.google.api.Quota;
            authentication?: dependency_1.google.api.Authentication;
            usage?: dependency_7.google.api.Usage;
            endpoints?: dependency_3.google.api.Endpoint[];
            monitored_resources?: dependency_4.google.api.MonitoredResourceDescriptor[];
            monitoring?: dependency_5.google.api.Monitoring;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3, 18, 25], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("title" in data && data.title != undefined) {
                    this.title = data.title;
                }
                if ("apis" in data && data.apis != undefined) {
                    this.apis = data.apis;
                }
                if ("documentation" in data && data.documentation != undefined) {
                    this.documentation = data.documentation;
                }
                if ("quota" in data && data.quota != undefined) {
                    this.quota = data.quota;
                }
                if ("authentication" in data && data.authentication != undefined) {
                    this.authentication = data.authentication;
                }
                if ("usage" in data && data.usage != undefined) {
                    this.usage = data.usage;
                }
                if ("endpoints" in data && data.endpoints != undefined) {
                    this.endpoints = data.endpoints;
                }
                if ("monitored_resources" in data && data.monitored_resources != undefined) {
                    this.monitored_resources = data.monitored_resources;
                }
                if ("monitoring" in data && data.monitoring != undefined) {
                    this.monitoring = data.monitoring;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get title() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set title(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get apis() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_8.google.protobuf.Api, 3) as dependency_8.google.protobuf.Api[];
        }
        set apis(value: dependency_8.google.protobuf.Api[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get documentation() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.api.Documentation, 6) as dependency_2.google.api.Documentation;
        }
        set documentation(value: dependency_2.google.api.Documentation) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_documentation() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get quota() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.api.Quota, 10) as dependency_6.google.api.Quota;
        }
        set quota(value: dependency_6.google.api.Quota) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_quota() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get authentication() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.api.Authentication, 11) as dependency_1.google.api.Authentication;
        }
        set authentication(value: dependency_1.google.api.Authentication) {
            pb_1.Message.setWrapperField(this, 11, value);
        }
        get has_authentication() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get usage() {
            return pb_1.Message.getWrapperField(this, dependency_7.google.api.Usage, 15) as dependency_7.google.api.Usage;
        }
        set usage(value: dependency_7.google.api.Usage) {
            pb_1.Message.setWrapperField(this, 15, value);
        }
        get has_usage() {
            return pb_1.Message.getField(this, 15) != null;
        }
        get endpoints() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.google.api.Endpoint, 18) as dependency_3.google.api.Endpoint[];
        }
        set endpoints(value: dependency_3.google.api.Endpoint[]) {
            pb_1.Message.setRepeatedWrapperField(this, 18, value);
        }
        get monitored_resources() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.google.api.MonitoredResourceDescriptor, 25) as dependency_4.google.api.MonitoredResourceDescriptor[];
        }
        set monitored_resources(value: dependency_4.google.api.MonitoredResourceDescriptor[]) {
            pb_1.Message.setRepeatedWrapperField(this, 25, value);
        }
        get monitoring() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.api.Monitoring, 28) as dependency_5.google.api.Monitoring;
        }
        set monitoring(value: dependency_5.google.api.Monitoring) {
            pb_1.Message.setWrapperField(this, 28, value);
        }
        get has_monitoring() {
            return pb_1.Message.getField(this, 28) != null;
        }
        static fromObject(data: {
            name?: string;
            title?: string;
            apis?: ReturnType<typeof dependency_8.google.protobuf.Api.prototype.toObject>[];
            documentation?: ReturnType<typeof dependency_2.google.api.Documentation.prototype.toObject>;
            quota?: ReturnType<typeof dependency_6.google.api.Quota.prototype.toObject>;
            authentication?: ReturnType<typeof dependency_1.google.api.Authentication.prototype.toObject>;
            usage?: ReturnType<typeof dependency_7.google.api.Usage.prototype.toObject>;
            endpoints?: ReturnType<typeof dependency_3.google.api.Endpoint.prototype.toObject>[];
            monitored_resources?: ReturnType<typeof dependency_4.google.api.MonitoredResourceDescriptor.prototype.toObject>[];
            monitoring?: ReturnType<typeof dependency_5.google.api.Monitoring.prototype.toObject>;
        }): ServiceConfig {
            const message = new ServiceConfig({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.title != null) {
                message.title = data.title;
            }
            if (data.apis != null) {
                message.apis = data.apis.map(item => dependency_8.google.protobuf.Api.fromObject(item));
            }
            if (data.documentation != null) {
                message.documentation = dependency_2.google.api.Documentation.fromObject(data.documentation);
            }
            if (data.quota != null) {
                message.quota = dependency_6.google.api.Quota.fromObject(data.quota);
            }
            if (data.authentication != null) {
                message.authentication = dependency_1.google.api.Authentication.fromObject(data.authentication);
            }
            if (data.usage != null) {
                message.usage = dependency_7.google.api.Usage.fromObject(data.usage);
            }
            if (data.endpoints != null) {
                message.endpoints = data.endpoints.map(item => dependency_3.google.api.Endpoint.fromObject(item));
            }
            if (data.monitored_resources != null) {
                message.monitored_resources = data.monitored_resources.map(item => dependency_4.google.api.MonitoredResourceDescriptor.fromObject(item));
            }
            if (data.monitoring != null) {
                message.monitoring = dependency_5.google.api.Monitoring.fromObject(data.monitoring);
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                title?: string;
                apis?: ReturnType<typeof dependency_8.google.protobuf.Api.prototype.toObject>[];
                documentation?: ReturnType<typeof dependency_2.google.api.Documentation.prototype.toObject>;
                quota?: ReturnType<typeof dependency_6.google.api.Quota.prototype.toObject>;
                authentication?: ReturnType<typeof dependency_1.google.api.Authentication.prototype.toObject>;
                usage?: ReturnType<typeof dependency_7.google.api.Usage.prototype.toObject>;
                endpoints?: ReturnType<typeof dependency_3.google.api.Endpoint.prototype.toObject>[];
                monitored_resources?: ReturnType<typeof dependency_4.google.api.MonitoredResourceDescriptor.prototype.toObject>[];
                monitoring?: ReturnType<typeof dependency_5.google.api.Monitoring.prototype.toObject>;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.title != null) {
                data.title = this.title;
            }
            if (this.apis != null) {
                data.apis = this.apis.map((item: dependency_8.google.protobuf.Api) => item.toObject());
            }
            if (this.documentation != null) {
                data.documentation = this.documentation.toObject();
            }
            if (this.quota != null) {
                data.quota = this.quota.toObject();
            }
            if (this.authentication != null) {
                data.authentication = this.authentication.toObject();
            }
            if (this.usage != null) {
                data.usage = this.usage.toObject();
            }
            if (this.endpoints != null) {
                data.endpoints = this.endpoints.map((item: dependency_3.google.api.Endpoint) => item.toObject());
            }
            if (this.monitored_resources != null) {
                data.monitored_resources = this.monitored_resources.map((item: dependency_4.google.api.MonitoredResourceDescriptor) => item.toObject());
            }
            if (this.monitoring != null) {
                data.monitoring = this.monitoring.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.title.length)
                writer.writeString(2, this.title);
            if (this.apis.length)
                writer.writeRepeatedMessage(3, this.apis, (item: dependency_8.google.protobuf.Api) => item.serialize(writer));
            if (this.has_documentation)
                writer.writeMessage(6, this.documentation, () => this.documentation.serialize(writer));
            if (this.has_quota)
                writer.writeMessage(10, this.quota, () => this.quota.serialize(writer));
            if (this.has_authentication)
                writer.writeMessage(11, this.authentication, () => this.authentication.serialize(writer));
            if (this.has_usage)
                writer.writeMessage(15, this.usage, () => this.usage.serialize(writer));
            if (this.endpoints.length)
                writer.writeRepeatedMessage(18, this.endpoints, (item: dependency_3.google.api.Endpoint) => item.serialize(writer));
            if (this.monitored_resources.length)
                writer.writeRepeatedMessage(25, this.monitored_resources, (item: dependency_4.google.api.MonitoredResourceDescriptor) => item.serialize(writer));
            if (this.has_monitoring)
                writer.writeMessage(28, this.monitoring, () => this.monitoring.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ServiceConfig {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ServiceConfig();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.title = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.apis, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_8.google.protobuf.Api.deserialize(reader), dependency_8.google.protobuf.Api));
                        break;
                    case 6:
                        reader.readMessage(message.documentation, () => message.documentation = dependency_2.google.api.Documentation.deserialize(reader));
                        break;
                    case 10:
                        reader.readMessage(message.quota, () => message.quota = dependency_6.google.api.Quota.deserialize(reader));
                        break;
                    case 11:
                        reader.readMessage(message.authentication, () => message.authentication = dependency_1.google.api.Authentication.deserialize(reader));
                        break;
                    case 15:
                        reader.readMessage(message.usage, () => message.usage = dependency_7.google.api.Usage.deserialize(reader));
                        break;
                    case 18:
                        reader.readMessage(message.endpoints, () => pb_1.Message.addToRepeatedWrapperField(message, 18, dependency_3.google.api.Endpoint.deserialize(reader), dependency_3.google.api.Endpoint));
                        break;
                    case 25:
                        reader.readMessage(message.monitored_resources, () => pb_1.Message.addToRepeatedWrapperField(message, 25, dependency_4.google.api.MonitoredResourceDescriptor.deserialize(reader), dependency_4.google.api.MonitoredResourceDescriptor));
                        break;
                    case 28:
                        reader.readMessage(message.monitoring, () => message.monitoring = dependency_5.google.api.Monitoring.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ServiceConfig {
            return ServiceConfig.deserialize(bytes);
        }
    }
    export class OperationMetadata extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            resource_names?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("resource_names" in data && data.resource_names != undefined) {
                    this.resource_names = data.resource_names;
                }
            }
        }
        get resource_names() {
            return pb_1.Message.getFieldWithDefault(this, 2, []) as string[];
        }
        set resource_names(value: string[]) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            resource_names?: string[];
        }): OperationMetadata {
            const message = new OperationMetadata({});
            if (data.resource_names != null) {
                message.resource_names = data.resource_names;
            }
            return message;
        }
        toObject() {
            const data: {
                resource_names?: string[];
            } = {};
            if (this.resource_names != null) {
                data.resource_names = this.resource_names;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.resource_names.length)
                writer.writeRepeatedString(2, this.resource_names);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): OperationMetadata {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new OperationMetadata();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): OperationMetadata {
            return OperationMetadata.deserialize(bytes);
        }
    }
    export class ConsumerQuotaMetric extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            metric?: string;
            display_name?: string;
            consumer_quota_limits?: ConsumerQuotaLimit[];
            descendant_consumer_quota_limits?: ConsumerQuotaLimit[];
            unit?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3, 6], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("metric" in data && data.metric != undefined) {
                    this.metric = data.metric;
                }
                if ("display_name" in data && data.display_name != undefined) {
                    this.display_name = data.display_name;
                }
                if ("consumer_quota_limits" in data && data.consumer_quota_limits != undefined) {
                    this.consumer_quota_limits = data.consumer_quota_limits;
                }
                if ("descendant_consumer_quota_limits" in data && data.descendant_consumer_quota_limits != undefined) {
                    this.descendant_consumer_quota_limits = data.descendant_consumer_quota_limits;
                }
                if ("unit" in data && data.unit != undefined) {
                    this.unit = data.unit;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get metric() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set metric(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get display_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set display_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get consumer_quota_limits() {
            return pb_1.Message.getRepeatedWrapperField(this, ConsumerQuotaLimit, 3) as ConsumerQuotaLimit[];
        }
        set consumer_quota_limits(value: ConsumerQuotaLimit[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get descendant_consumer_quota_limits() {
            return pb_1.Message.getRepeatedWrapperField(this, ConsumerQuotaLimit, 6) as ConsumerQuotaLimit[];
        }
        set descendant_consumer_quota_limits(value: ConsumerQuotaLimit[]) {
            pb_1.Message.setRepeatedWrapperField(this, 6, value);
        }
        get unit() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set unit(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            name?: string;
            metric?: string;
            display_name?: string;
            consumer_quota_limits?: ReturnType<typeof ConsumerQuotaLimit.prototype.toObject>[];
            descendant_consumer_quota_limits?: ReturnType<typeof ConsumerQuotaLimit.prototype.toObject>[];
            unit?: string;
        }): ConsumerQuotaMetric {
            const message = new ConsumerQuotaMetric({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.metric != null) {
                message.metric = data.metric;
            }
            if (data.display_name != null) {
                message.display_name = data.display_name;
            }
            if (data.consumer_quota_limits != null) {
                message.consumer_quota_limits = data.consumer_quota_limits.map(item => ConsumerQuotaLimit.fromObject(item));
            }
            if (data.descendant_consumer_quota_limits != null) {
                message.descendant_consumer_quota_limits = data.descendant_consumer_quota_limits.map(item => ConsumerQuotaLimit.fromObject(item));
            }
            if (data.unit != null) {
                message.unit = data.unit;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                metric?: string;
                display_name?: string;
                consumer_quota_limits?: ReturnType<typeof ConsumerQuotaLimit.prototype.toObject>[];
                descendant_consumer_quota_limits?: ReturnType<typeof ConsumerQuotaLimit.prototype.toObject>[];
                unit?: string;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.metric != null) {
                data.metric = this.metric;
            }
            if (this.display_name != null) {
                data.display_name = this.display_name;
            }
            if (this.consumer_quota_limits != null) {
                data.consumer_quota_limits = this.consumer_quota_limits.map((item: ConsumerQuotaLimit) => item.toObject());
            }
            if (this.descendant_consumer_quota_limits != null) {
                data.descendant_consumer_quota_limits = this.descendant_consumer_quota_limits.map((item: ConsumerQuotaLimit) => item.toObject());
            }
            if (this.unit != null) {
                data.unit = this.unit;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.metric.length)
                writer.writeString(4, this.metric);
            if (this.display_name.length)
                writer.writeString(2, this.display_name);
            if (this.consumer_quota_limits.length)
                writer.writeRepeatedMessage(3, this.consumer_quota_limits, (item: ConsumerQuotaLimit) => item.serialize(writer));
            if (this.descendant_consumer_quota_limits.length)
                writer.writeRepeatedMessage(6, this.descendant_consumer_quota_limits, (item: ConsumerQuotaLimit) => item.serialize(writer));
            if (this.unit.length)
                writer.writeString(5, this.unit);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ConsumerQuotaMetric {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ConsumerQuotaMetric();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 4:
                        message.metric = reader.readString();
                        break;
                    case 2:
                        message.display_name = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.consumer_quota_limits, () => pb_1.Message.addToRepeatedWrapperField(message, 3, ConsumerQuotaLimit.deserialize(reader), ConsumerQuotaLimit));
                        break;
                    case 6:
                        reader.readMessage(message.descendant_consumer_quota_limits, () => pb_1.Message.addToRepeatedWrapperField(message, 6, ConsumerQuotaLimit.deserialize(reader), ConsumerQuotaLimit));
                        break;
                    case 5:
                        message.unit = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ConsumerQuotaMetric {
            return ConsumerQuotaMetric.deserialize(bytes);
        }
    }
    export class ConsumerQuotaLimit extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            metric?: string;
            unit?: string;
            is_precise?: boolean;
            allows_admin_overrides?: boolean;
            quota_buckets?: QuotaBucket[];
            supported_locations?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [9, 11], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("metric" in data && data.metric != undefined) {
                    this.metric = data.metric;
                }
                if ("unit" in data && data.unit != undefined) {
                    this.unit = data.unit;
                }
                if ("is_precise" in data && data.is_precise != undefined) {
                    this.is_precise = data.is_precise;
                }
                if ("allows_admin_overrides" in data && data.allows_admin_overrides != undefined) {
                    this.allows_admin_overrides = data.allows_admin_overrides;
                }
                if ("quota_buckets" in data && data.quota_buckets != undefined) {
                    this.quota_buckets = data.quota_buckets;
                }
                if ("supported_locations" in data && data.supported_locations != undefined) {
                    this.supported_locations = data.supported_locations;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get metric() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set metric(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get unit() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set unit(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get is_precise() {
            return pb_1.Message.getFieldWithDefault(this, 3, false) as boolean;
        }
        set is_precise(value: boolean) {
            pb_1.Message.setField(this, 3, value);
        }
        get allows_admin_overrides() {
            return pb_1.Message.getFieldWithDefault(this, 7, false) as boolean;
        }
        set allows_admin_overrides(value: boolean) {
            pb_1.Message.setField(this, 7, value);
        }
        get quota_buckets() {
            return pb_1.Message.getRepeatedWrapperField(this, QuotaBucket, 9) as QuotaBucket[];
        }
        set quota_buckets(value: QuotaBucket[]) {
            pb_1.Message.setRepeatedWrapperField(this, 9, value);
        }
        get supported_locations() {
            return pb_1.Message.getFieldWithDefault(this, 11, []) as string[];
        }
        set supported_locations(value: string[]) {
            pb_1.Message.setField(this, 11, value);
        }
        static fromObject(data: {
            name?: string;
            metric?: string;
            unit?: string;
            is_precise?: boolean;
            allows_admin_overrides?: boolean;
            quota_buckets?: ReturnType<typeof QuotaBucket.prototype.toObject>[];
            supported_locations?: string[];
        }): ConsumerQuotaLimit {
            const message = new ConsumerQuotaLimit({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.metric != null) {
                message.metric = data.metric;
            }
            if (data.unit != null) {
                message.unit = data.unit;
            }
            if (data.is_precise != null) {
                message.is_precise = data.is_precise;
            }
            if (data.allows_admin_overrides != null) {
                message.allows_admin_overrides = data.allows_admin_overrides;
            }
            if (data.quota_buckets != null) {
                message.quota_buckets = data.quota_buckets.map(item => QuotaBucket.fromObject(item));
            }
            if (data.supported_locations != null) {
                message.supported_locations = data.supported_locations;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                metric?: string;
                unit?: string;
                is_precise?: boolean;
                allows_admin_overrides?: boolean;
                quota_buckets?: ReturnType<typeof QuotaBucket.prototype.toObject>[];
                supported_locations?: string[];
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.metric != null) {
                data.metric = this.metric;
            }
            if (this.unit != null) {
                data.unit = this.unit;
            }
            if (this.is_precise != null) {
                data.is_precise = this.is_precise;
            }
            if (this.allows_admin_overrides != null) {
                data.allows_admin_overrides = this.allows_admin_overrides;
            }
            if (this.quota_buckets != null) {
                data.quota_buckets = this.quota_buckets.map((item: QuotaBucket) => item.toObject());
            }
            if (this.supported_locations != null) {
                data.supported_locations = this.supported_locations;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.metric.length)
                writer.writeString(8, this.metric);
            if (this.unit.length)
                writer.writeString(2, this.unit);
            if (this.is_precise != false)
                writer.writeBool(3, this.is_precise);
            if (this.allows_admin_overrides != false)
                writer.writeBool(7, this.allows_admin_overrides);
            if (this.quota_buckets.length)
                writer.writeRepeatedMessage(9, this.quota_buckets, (item: QuotaBucket) => item.serialize(writer));
            if (this.supported_locations.length)
                writer.writeRepeatedString(11, this.supported_locations);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ConsumerQuotaLimit {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ConsumerQuotaLimit();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 8:
                        message.metric = reader.readString();
                        break;
                    case 2:
                        message.unit = reader.readString();
                        break;
                    case 3:
                        message.is_precise = reader.readBool();
                        break;
                    case 7:
                        message.allows_admin_overrides = reader.readBool();
                        break;
                    case 9:
                        reader.readMessage(message.quota_buckets, () => pb_1.Message.addToRepeatedWrapperField(message, 9, QuotaBucket.deserialize(reader), QuotaBucket));
                        break;
                    case 11:
                        pb_1.Message.addToRepeatedField(message, 11, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ConsumerQuotaLimit {
            return ConsumerQuotaLimit.deserialize(bytes);
        }
    }
    export class QuotaBucket extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            effective_limit?: number;
            default_limit?: number;
            producer_override?: QuotaOverride;
            consumer_override?: QuotaOverride;
            admin_override?: QuotaOverride;
            producer_quota_policy?: ProducerQuotaPolicy;
            dimensions?: Map<string, string>;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("effective_limit" in data && data.effective_limit != undefined) {
                    this.effective_limit = data.effective_limit;
                }
                if ("default_limit" in data && data.default_limit != undefined) {
                    this.default_limit = data.default_limit;
                }
                if ("producer_override" in data && data.producer_override != undefined) {
                    this.producer_override = data.producer_override;
                }
                if ("consumer_override" in data && data.consumer_override != undefined) {
                    this.consumer_override = data.consumer_override;
                }
                if ("admin_override" in data && data.admin_override != undefined) {
                    this.admin_override = data.admin_override;
                }
                if ("producer_quota_policy" in data && data.producer_quota_policy != undefined) {
                    this.producer_quota_policy = data.producer_quota_policy;
                }
                if ("dimensions" in data && data.dimensions != undefined) {
                    this.dimensions = data.dimensions;
                }
            }
            if (!this.dimensions)
                this.dimensions = new Map();
        }
        get effective_limit() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set effective_limit(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get default_limit() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set default_limit(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get producer_override() {
            return pb_1.Message.getWrapperField(this, QuotaOverride, 3) as QuotaOverride;
        }
        set producer_override(value: QuotaOverride) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_producer_override() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get consumer_override() {
            return pb_1.Message.getWrapperField(this, QuotaOverride, 4) as QuotaOverride;
        }
        set consumer_override(value: QuotaOverride) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_consumer_override() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get admin_override() {
            return pb_1.Message.getWrapperField(this, QuotaOverride, 5) as QuotaOverride;
        }
        set admin_override(value: QuotaOverride) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_admin_override() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get producer_quota_policy() {
            return pb_1.Message.getWrapperField(this, ProducerQuotaPolicy, 7) as ProducerQuotaPolicy;
        }
        set producer_quota_policy(value: ProducerQuotaPolicy) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_producer_quota_policy() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get dimensions() {
            return pb_1.Message.getField(this, 6) as any as Map<string, string>;
        }
        set dimensions(value: Map<string, string>) {
            pb_1.Message.setField(this, 6, value as any);
        }
        static fromObject(data: {
            effective_limit?: number;
            default_limit?: number;
            producer_override?: ReturnType<typeof QuotaOverride.prototype.toObject>;
            consumer_override?: ReturnType<typeof QuotaOverride.prototype.toObject>;
            admin_override?: ReturnType<typeof QuotaOverride.prototype.toObject>;
            producer_quota_policy?: ReturnType<typeof ProducerQuotaPolicy.prototype.toObject>;
            dimensions?: {
                [key: string]: string;
            };
        }): QuotaBucket {
            const message = new QuotaBucket({});
            if (data.effective_limit != null) {
                message.effective_limit = data.effective_limit;
            }
            if (data.default_limit != null) {
                message.default_limit = data.default_limit;
            }
            if (data.producer_override != null) {
                message.producer_override = QuotaOverride.fromObject(data.producer_override);
            }
            if (data.consumer_override != null) {
                message.consumer_override = QuotaOverride.fromObject(data.consumer_override);
            }
            if (data.admin_override != null) {
                message.admin_override = QuotaOverride.fromObject(data.admin_override);
            }
            if (data.producer_quota_policy != null) {
                message.producer_quota_policy = ProducerQuotaPolicy.fromObject(data.producer_quota_policy);
            }
            if (typeof data.dimensions == "object") {
                message.dimensions = new Map(Object.entries(data.dimensions));
            }
            return message;
        }
        toObject() {
            const data: {
                effective_limit?: number;
                default_limit?: number;
                producer_override?: ReturnType<typeof QuotaOverride.prototype.toObject>;
                consumer_override?: ReturnType<typeof QuotaOverride.prototype.toObject>;
                admin_override?: ReturnType<typeof QuotaOverride.prototype.toObject>;
                producer_quota_policy?: ReturnType<typeof ProducerQuotaPolicy.prototype.toObject>;
                dimensions?: {
                    [key: string]: string;
                };
            } = {};
            if (this.effective_limit != null) {
                data.effective_limit = this.effective_limit;
            }
            if (this.default_limit != null) {
                data.default_limit = this.default_limit;
            }
            if (this.producer_override != null) {
                data.producer_override = this.producer_override.toObject();
            }
            if (this.consumer_override != null) {
                data.consumer_override = this.consumer_override.toObject();
            }
            if (this.admin_override != null) {
                data.admin_override = this.admin_override.toObject();
            }
            if (this.producer_quota_policy != null) {
                data.producer_quota_policy = this.producer_quota_policy.toObject();
            }
            if (this.dimensions != null) {
                data.dimensions = (Object.fromEntries)(this.dimensions);
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.effective_limit != 0)
                writer.writeInt64(1, this.effective_limit);
            if (this.default_limit != 0)
                writer.writeInt64(2, this.default_limit);
            if (this.has_producer_override)
                writer.writeMessage(3, this.producer_override, () => this.producer_override.serialize(writer));
            if (this.has_consumer_override)
                writer.writeMessage(4, this.consumer_override, () => this.consumer_override.serialize(writer));
            if (this.has_admin_override)
                writer.writeMessage(5, this.admin_override, () => this.admin_override.serialize(writer));
            if (this.has_producer_quota_policy)
                writer.writeMessage(7, this.producer_quota_policy, () => this.producer_quota_policy.serialize(writer));
            for (const [key, value] of this.dimensions) {
                writer.writeMessage(6, this.dimensions, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QuotaBucket {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QuotaBucket();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.effective_limit = reader.readInt64();
                        break;
                    case 2:
                        message.default_limit = reader.readInt64();
                        break;
                    case 3:
                        reader.readMessage(message.producer_override, () => message.producer_override = QuotaOverride.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.consumer_override, () => message.consumer_override = QuotaOverride.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.admin_override, () => message.admin_override = QuotaOverride.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.producer_quota_policy, () => message.producer_quota_policy = ProducerQuotaPolicy.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.dimensions as any, reader, reader.readString, reader.readString));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QuotaBucket {
            return QuotaBucket.deserialize(bytes);
        }
    }
    export class QuotaOverride extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            override_value?: number;
            dimensions?: Map<string, string>;
            metric?: string;
            unit?: string;
            admin_override_ancestor?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("override_value" in data && data.override_value != undefined) {
                    this.override_value = data.override_value;
                }
                if ("dimensions" in data && data.dimensions != undefined) {
                    this.dimensions = data.dimensions;
                }
                if ("metric" in data && data.metric != undefined) {
                    this.metric = data.metric;
                }
                if ("unit" in data && data.unit != undefined) {
                    this.unit = data.unit;
                }
                if ("admin_override_ancestor" in data && data.admin_override_ancestor != undefined) {
                    this.admin_override_ancestor = data.admin_override_ancestor;
                }
            }
            if (!this.dimensions)
                this.dimensions = new Map();
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get override_value() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set override_value(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get dimensions() {
            return pb_1.Message.getField(this, 3) as any as Map<string, string>;
        }
        set dimensions(value: Map<string, string>) {
            pb_1.Message.setField(this, 3, value as any);
        }
        get metric() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set metric(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get unit() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set unit(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get admin_override_ancestor() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set admin_override_ancestor(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            name?: string;
            override_value?: number;
            dimensions?: {
                [key: string]: string;
            };
            metric?: string;
            unit?: string;
            admin_override_ancestor?: string;
        }): QuotaOverride {
            const message = new QuotaOverride({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.override_value != null) {
                message.override_value = data.override_value;
            }
            if (typeof data.dimensions == "object") {
                message.dimensions = new Map(Object.entries(data.dimensions));
            }
            if (data.metric != null) {
                message.metric = data.metric;
            }
            if (data.unit != null) {
                message.unit = data.unit;
            }
            if (data.admin_override_ancestor != null) {
                message.admin_override_ancestor = data.admin_override_ancestor;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                override_value?: number;
                dimensions?: {
                    [key: string]: string;
                };
                metric?: string;
                unit?: string;
                admin_override_ancestor?: string;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.override_value != null) {
                data.override_value = this.override_value;
            }
            if (this.dimensions != null) {
                data.dimensions = (Object.fromEntries)(this.dimensions);
            }
            if (this.metric != null) {
                data.metric = this.metric;
            }
            if (this.unit != null) {
                data.unit = this.unit;
            }
            if (this.admin_override_ancestor != null) {
                data.admin_override_ancestor = this.admin_override_ancestor;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.override_value != 0)
                writer.writeInt64(2, this.override_value);
            for (const [key, value] of this.dimensions) {
                writer.writeMessage(3, this.dimensions, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (this.metric.length)
                writer.writeString(4, this.metric);
            if (this.unit.length)
                writer.writeString(5, this.unit);
            if (this.admin_override_ancestor.length)
                writer.writeString(6, this.admin_override_ancestor);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QuotaOverride {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QuotaOverride();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.override_value = reader.readInt64();
                        break;
                    case 3:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.dimensions as any, reader, reader.readString, reader.readString));
                        break;
                    case 4:
                        message.metric = reader.readString();
                        break;
                    case 5:
                        message.unit = reader.readString();
                        break;
                    case 6:
                        message.admin_override_ancestor = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QuotaOverride {
            return QuotaOverride.deserialize(bytes);
        }
    }
    export class OverrideInlineSource extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            overrides?: QuotaOverride[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("overrides" in data && data.overrides != undefined) {
                    this.overrides = data.overrides;
                }
            }
        }
        get overrides() {
            return pb_1.Message.getRepeatedWrapperField(this, QuotaOverride, 1) as QuotaOverride[];
        }
        set overrides(value: QuotaOverride[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data: {
            overrides?: ReturnType<typeof QuotaOverride.prototype.toObject>[];
        }): OverrideInlineSource {
            const message = new OverrideInlineSource({});
            if (data.overrides != null) {
                message.overrides = data.overrides.map(item => QuotaOverride.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                overrides?: ReturnType<typeof QuotaOverride.prototype.toObject>[];
            } = {};
            if (this.overrides != null) {
                data.overrides = this.overrides.map((item: QuotaOverride) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.overrides.length)
                writer.writeRepeatedMessage(1, this.overrides, (item: QuotaOverride) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): OverrideInlineSource {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new OverrideInlineSource();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.overrides, () => pb_1.Message.addToRepeatedWrapperField(message, 1, QuotaOverride.deserialize(reader), QuotaOverride));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): OverrideInlineSource {
            return OverrideInlineSource.deserialize(bytes);
        }
    }
    export class ProducerQuotaPolicy extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            policy_value?: number;
            dimensions?: Map<string, string>;
            metric?: string;
            unit?: string;
            container?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("policy_value" in data && data.policy_value != undefined) {
                    this.policy_value = data.policy_value;
                }
                if ("dimensions" in data && data.dimensions != undefined) {
                    this.dimensions = data.dimensions;
                }
                if ("metric" in data && data.metric != undefined) {
                    this.metric = data.metric;
                }
                if ("unit" in data && data.unit != undefined) {
                    this.unit = data.unit;
                }
                if ("container" in data && data.container != undefined) {
                    this.container = data.container;
                }
            }
            if (!this.dimensions)
                this.dimensions = new Map();
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get policy_value() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set policy_value(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get dimensions() {
            return pb_1.Message.getField(this, 3) as any as Map<string, string>;
        }
        set dimensions(value: Map<string, string>) {
            pb_1.Message.setField(this, 3, value as any);
        }
        get metric() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set metric(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get unit() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set unit(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get container() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set container(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            name?: string;
            policy_value?: number;
            dimensions?: {
                [key: string]: string;
            };
            metric?: string;
            unit?: string;
            container?: string;
        }): ProducerQuotaPolicy {
            const message = new ProducerQuotaPolicy({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.policy_value != null) {
                message.policy_value = data.policy_value;
            }
            if (typeof data.dimensions == "object") {
                message.dimensions = new Map(Object.entries(data.dimensions));
            }
            if (data.metric != null) {
                message.metric = data.metric;
            }
            if (data.unit != null) {
                message.unit = data.unit;
            }
            if (data.container != null) {
                message.container = data.container;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                policy_value?: number;
                dimensions?: {
                    [key: string]: string;
                };
                metric?: string;
                unit?: string;
                container?: string;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.policy_value != null) {
                data.policy_value = this.policy_value;
            }
            if (this.dimensions != null) {
                data.dimensions = (Object.fromEntries)(this.dimensions);
            }
            if (this.metric != null) {
                data.metric = this.metric;
            }
            if (this.unit != null) {
                data.unit = this.unit;
            }
            if (this.container != null) {
                data.container = this.container;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.policy_value != 0)
                writer.writeInt64(2, this.policy_value);
            for (const [key, value] of this.dimensions) {
                writer.writeMessage(3, this.dimensions, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (this.metric.length)
                writer.writeString(4, this.metric);
            if (this.unit.length)
                writer.writeString(5, this.unit);
            if (this.container.length)
                writer.writeString(6, this.container);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProducerQuotaPolicy {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProducerQuotaPolicy();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.policy_value = reader.readInt64();
                        break;
                    case 3:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.dimensions as any, reader, reader.readString, reader.readString));
                        break;
                    case 4:
                        message.metric = reader.readString();
                        break;
                    case 5:
                        message.unit = reader.readString();
                        break;
                    case 6:
                        message.container = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ProducerQuotaPolicy {
            return ProducerQuotaPolicy.deserialize(bytes);
        }
    }
    export class AdminQuotaPolicy extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            policy_value?: number;
            dimensions?: Map<string, string>;
            metric?: string;
            unit?: string;
            container?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("policy_value" in data && data.policy_value != undefined) {
                    this.policy_value = data.policy_value;
                }
                if ("dimensions" in data && data.dimensions != undefined) {
                    this.dimensions = data.dimensions;
                }
                if ("metric" in data && data.metric != undefined) {
                    this.metric = data.metric;
                }
                if ("unit" in data && data.unit != undefined) {
                    this.unit = data.unit;
                }
                if ("container" in data && data.container != undefined) {
                    this.container = data.container;
                }
            }
            if (!this.dimensions)
                this.dimensions = new Map();
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get policy_value() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set policy_value(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get dimensions() {
            return pb_1.Message.getField(this, 3) as any as Map<string, string>;
        }
        set dimensions(value: Map<string, string>) {
            pb_1.Message.setField(this, 3, value as any);
        }
        get metric() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set metric(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get unit() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set unit(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get container() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set container(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            name?: string;
            policy_value?: number;
            dimensions?: {
                [key: string]: string;
            };
            metric?: string;
            unit?: string;
            container?: string;
        }): AdminQuotaPolicy {
            const message = new AdminQuotaPolicy({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.policy_value != null) {
                message.policy_value = data.policy_value;
            }
            if (typeof data.dimensions == "object") {
                message.dimensions = new Map(Object.entries(data.dimensions));
            }
            if (data.metric != null) {
                message.metric = data.metric;
            }
            if (data.unit != null) {
                message.unit = data.unit;
            }
            if (data.container != null) {
                message.container = data.container;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                policy_value?: number;
                dimensions?: {
                    [key: string]: string;
                };
                metric?: string;
                unit?: string;
                container?: string;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.policy_value != null) {
                data.policy_value = this.policy_value;
            }
            if (this.dimensions != null) {
                data.dimensions = (Object.fromEntries)(this.dimensions);
            }
            if (this.metric != null) {
                data.metric = this.metric;
            }
            if (this.unit != null) {
                data.unit = this.unit;
            }
            if (this.container != null) {
                data.container = this.container;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.policy_value != 0)
                writer.writeInt64(2, this.policy_value);
            for (const [key, value] of this.dimensions) {
                writer.writeMessage(3, this.dimensions, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (this.metric.length)
                writer.writeString(4, this.metric);
            if (this.unit.length)
                writer.writeString(5, this.unit);
            if (this.container.length)
                writer.writeString(6, this.container);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AdminQuotaPolicy {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AdminQuotaPolicy();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.policy_value = reader.readInt64();
                        break;
                    case 3:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.dimensions as any, reader, reader.readString, reader.readString));
                        break;
                    case 4:
                        message.metric = reader.readString();
                        break;
                    case 5:
                        message.unit = reader.readString();
                        break;
                    case 6:
                        message.container = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AdminQuotaPolicy {
            return AdminQuotaPolicy.deserialize(bytes);
        }
    }
    export class ServiceIdentity extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            email?: string;
            unique_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("email" in data && data.email != undefined) {
                    this.email = data.email;
                }
                if ("unique_id" in data && data.unique_id != undefined) {
                    this.unique_id = data.unique_id;
                }
            }
        }
        get email() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set email(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get unique_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set unique_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            email?: string;
            unique_id?: string;
        }): ServiceIdentity {
            const message = new ServiceIdentity({});
            if (data.email != null) {
                message.email = data.email;
            }
            if (data.unique_id != null) {
                message.unique_id = data.unique_id;
            }
            return message;
        }
        toObject() {
            const data: {
                email?: string;
                unique_id?: string;
            } = {};
            if (this.email != null) {
                data.email = this.email;
            }
            if (this.unique_id != null) {
                data.unique_id = this.unique_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.email.length)
                writer.writeString(1, this.email);
            if (this.unique_id.length)
                writer.writeString(2, this.unique_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ServiceIdentity {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ServiceIdentity();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.email = reader.readString();
                        break;
                    case 2:
                        message.unique_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ServiceIdentity {
            return ServiceIdentity.deserialize(bytes);
        }
    }
}
