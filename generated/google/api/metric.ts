/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: google/api/metric.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./label";
import * as dependency_2 from "./launch_stage";
import * as dependency_3 from "./../protobuf/duration";
import * as pb_1 from "google-protobuf";
export namespace google.api {
    export class MetricDescriptor extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            type?: string;
            labels?: dependency_1.google.api.LabelDescriptor[];
            metric_kind?: MetricDescriptor.MetricKind;
            value_type?: MetricDescriptor.ValueType;
            unit?: string;
            description?: string;
            display_name?: string;
            metadata?: MetricDescriptor.MetricDescriptorMetadata;
            launch_stage?: dependency_2.google.api.LaunchStage;
            monitored_resource_types?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 13], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("labels" in data && data.labels != undefined) {
                    this.labels = data.labels;
                }
                if ("metric_kind" in data && data.metric_kind != undefined) {
                    this.metric_kind = data.metric_kind;
                }
                if ("value_type" in data && data.value_type != undefined) {
                    this.value_type = data.value_type;
                }
                if ("unit" in data && data.unit != undefined) {
                    this.unit = data.unit;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("display_name" in data && data.display_name != undefined) {
                    this.display_name = data.display_name;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
                if ("launch_stage" in data && data.launch_stage != undefined) {
                    this.launch_stage = data.launch_stage;
                }
                if ("monitored_resource_types" in data && data.monitored_resource_types != undefined) {
                    this.monitored_resource_types = data.monitored_resource_types;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set type(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get labels() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.google.api.LabelDescriptor, 2) as dependency_1.google.api.LabelDescriptor[];
        }
        set labels(value: dependency_1.google.api.LabelDescriptor[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get metric_kind() {
            return pb_1.Message.getFieldWithDefault(this, 3, MetricDescriptor.MetricKind.METRIC_KIND_UNSPECIFIED) as MetricDescriptor.MetricKind;
        }
        set metric_kind(value: MetricDescriptor.MetricKind) {
            pb_1.Message.setField(this, 3, value);
        }
        get value_type() {
            return pb_1.Message.getFieldWithDefault(this, 4, MetricDescriptor.ValueType.VALUE_TYPE_UNSPECIFIED) as MetricDescriptor.ValueType;
        }
        set value_type(value: MetricDescriptor.ValueType) {
            pb_1.Message.setField(this, 4, value);
        }
        get unit() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set unit(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get display_name() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set display_name(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get metadata() {
            return pb_1.Message.getWrapperField(this, MetricDescriptor.MetricDescriptorMetadata, 10) as MetricDescriptor.MetricDescriptorMetadata;
        }
        set metadata(value: MetricDescriptor.MetricDescriptorMetadata) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_metadata() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get launch_stage() {
            return pb_1.Message.getFieldWithDefault(this, 12, dependency_2.google.api.LaunchStage.LAUNCH_STAGE_UNSPECIFIED) as dependency_2.google.api.LaunchStage;
        }
        set launch_stage(value: dependency_2.google.api.LaunchStage) {
            pb_1.Message.setField(this, 12, value);
        }
        get monitored_resource_types() {
            return pb_1.Message.getFieldWithDefault(this, 13, []) as string[];
        }
        set monitored_resource_types(value: string[]) {
            pb_1.Message.setField(this, 13, value);
        }
        static fromObject(data: {
            name?: string;
            type?: string;
            labels?: ReturnType<typeof dependency_1.google.api.LabelDescriptor.prototype.toObject>[];
            metric_kind?: MetricDescriptor.MetricKind;
            value_type?: MetricDescriptor.ValueType;
            unit?: string;
            description?: string;
            display_name?: string;
            metadata?: ReturnType<typeof MetricDescriptor.MetricDescriptorMetadata.prototype.toObject>;
            launch_stage?: dependency_2.google.api.LaunchStage;
            monitored_resource_types?: string[];
        }): MetricDescriptor {
            const message = new MetricDescriptor({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.labels != null) {
                message.labels = data.labels.map(item => dependency_1.google.api.LabelDescriptor.fromObject(item));
            }
            if (data.metric_kind != null) {
                message.metric_kind = data.metric_kind;
            }
            if (data.value_type != null) {
                message.value_type = data.value_type;
            }
            if (data.unit != null) {
                message.unit = data.unit;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.display_name != null) {
                message.display_name = data.display_name;
            }
            if (data.metadata != null) {
                message.metadata = MetricDescriptor.MetricDescriptorMetadata.fromObject(data.metadata);
            }
            if (data.launch_stage != null) {
                message.launch_stage = data.launch_stage;
            }
            if (data.monitored_resource_types != null) {
                message.monitored_resource_types = data.monitored_resource_types;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                type?: string;
                labels?: ReturnType<typeof dependency_1.google.api.LabelDescriptor.prototype.toObject>[];
                metric_kind?: MetricDescriptor.MetricKind;
                value_type?: MetricDescriptor.ValueType;
                unit?: string;
                description?: string;
                display_name?: string;
                metadata?: ReturnType<typeof MetricDescriptor.MetricDescriptorMetadata.prototype.toObject>;
                launch_stage?: dependency_2.google.api.LaunchStage;
                monitored_resource_types?: string[];
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.labels != null) {
                data.labels = this.labels.map((item: dependency_1.google.api.LabelDescriptor) => item.toObject());
            }
            if (this.metric_kind != null) {
                data.metric_kind = this.metric_kind;
            }
            if (this.value_type != null) {
                data.value_type = this.value_type;
            }
            if (this.unit != null) {
                data.unit = this.unit;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.display_name != null) {
                data.display_name = this.display_name;
            }
            if (this.metadata != null) {
                data.metadata = this.metadata.toObject();
            }
            if (this.launch_stage != null) {
                data.launch_stage = this.launch_stage;
            }
            if (this.monitored_resource_types != null) {
                data.monitored_resource_types = this.monitored_resource_types;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.type.length)
                writer.writeString(8, this.type);
            if (this.labels.length)
                writer.writeRepeatedMessage(2, this.labels, (item: dependency_1.google.api.LabelDescriptor) => item.serialize(writer));
            if (this.metric_kind != MetricDescriptor.MetricKind.METRIC_KIND_UNSPECIFIED)
                writer.writeEnum(3, this.metric_kind);
            if (this.value_type != MetricDescriptor.ValueType.VALUE_TYPE_UNSPECIFIED)
                writer.writeEnum(4, this.value_type);
            if (this.unit.length)
                writer.writeString(5, this.unit);
            if (this.description.length)
                writer.writeString(6, this.description);
            if (this.display_name.length)
                writer.writeString(7, this.display_name);
            if (this.has_metadata)
                writer.writeMessage(10, this.metadata, () => this.metadata.serialize(writer));
            if (this.launch_stage != dependency_2.google.api.LaunchStage.LAUNCH_STAGE_UNSPECIFIED)
                writer.writeEnum(12, this.launch_stage);
            if (this.monitored_resource_types.length)
                writer.writeRepeatedString(13, this.monitored_resource_types);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MetricDescriptor {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MetricDescriptor();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 8:
                        message.type = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.labels, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.google.api.LabelDescriptor.deserialize(reader), dependency_1.google.api.LabelDescriptor));
                        break;
                    case 3:
                        message.metric_kind = reader.readEnum();
                        break;
                    case 4:
                        message.value_type = reader.readEnum();
                        break;
                    case 5:
                        message.unit = reader.readString();
                        break;
                    case 6:
                        message.description = reader.readString();
                        break;
                    case 7:
                        message.display_name = reader.readString();
                        break;
                    case 10:
                        reader.readMessage(message.metadata, () => message.metadata = MetricDescriptor.MetricDescriptorMetadata.deserialize(reader));
                        break;
                    case 12:
                        message.launch_stage = reader.readEnum();
                        break;
                    case 13:
                        pb_1.Message.addToRepeatedField(message, 13, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MetricDescriptor {
            return MetricDescriptor.deserialize(bytes);
        }
    }
    export namespace MetricDescriptor {
        export enum MetricKind {
            METRIC_KIND_UNSPECIFIED = 0,
            GAUGE = 1,
            DELTA = 2,
            CUMULATIVE = 3
        }
        export enum ValueType {
            VALUE_TYPE_UNSPECIFIED = 0,
            BOOL = 1,
            INT64 = 2,
            DOUBLE = 3,
            STRING = 4,
            DISTRIBUTION = 5,
            MONEY = 6
        }
        export class MetricDescriptorMetadata extends pb_1.Message {
            #one_of_decls: number[][] = [];
            constructor(data?: any[] | {
                /** @deprecated*/
                launch_stage?: dependency_2.google.api.LaunchStage;
                sample_period?: dependency_3.google.protobuf.Duration;
                ingest_delay?: dependency_3.google.protobuf.Duration;
            }) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("launch_stage" in data && data.launch_stage != undefined) {
                        this.launch_stage = data.launch_stage;
                    }
                    if ("sample_period" in data && data.sample_period != undefined) {
                        this.sample_period = data.sample_period;
                    }
                    if ("ingest_delay" in data && data.ingest_delay != undefined) {
                        this.ingest_delay = data.ingest_delay;
                    }
                }
            }
            /** @deprecated*/
            get launch_stage() {
                return pb_1.Message.getFieldWithDefault(this, 1, dependency_2.google.api.LaunchStage.LAUNCH_STAGE_UNSPECIFIED) as dependency_2.google.api.LaunchStage;
            }
            /** @deprecated*/
            set launch_stage(value: dependency_2.google.api.LaunchStage) {
                pb_1.Message.setField(this, 1, value);
            }
            get sample_period() {
                return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Duration, 2) as dependency_3.google.protobuf.Duration;
            }
            set sample_period(value: dependency_3.google.protobuf.Duration) {
                pb_1.Message.setWrapperField(this, 2, value);
            }
            get has_sample_period() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get ingest_delay() {
                return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Duration, 3) as dependency_3.google.protobuf.Duration;
            }
            set ingest_delay(value: dependency_3.google.protobuf.Duration) {
                pb_1.Message.setWrapperField(this, 3, value);
            }
            get has_ingest_delay() {
                return pb_1.Message.getField(this, 3) != null;
            }
            static fromObject(data: {
                launch_stage?: dependency_2.google.api.LaunchStage;
                sample_period?: ReturnType<typeof dependency_3.google.protobuf.Duration.prototype.toObject>;
                ingest_delay?: ReturnType<typeof dependency_3.google.protobuf.Duration.prototype.toObject>;
            }): MetricDescriptorMetadata {
                const message = new MetricDescriptorMetadata({});
                if (data.launch_stage != null) {
                    message.launch_stage = data.launch_stage;
                }
                if (data.sample_period != null) {
                    message.sample_period = dependency_3.google.protobuf.Duration.fromObject(data.sample_period);
                }
                if (data.ingest_delay != null) {
                    message.ingest_delay = dependency_3.google.protobuf.Duration.fromObject(data.ingest_delay);
                }
                return message;
            }
            toObject() {
                const data: {
                    launch_stage?: dependency_2.google.api.LaunchStage;
                    sample_period?: ReturnType<typeof dependency_3.google.protobuf.Duration.prototype.toObject>;
                    ingest_delay?: ReturnType<typeof dependency_3.google.protobuf.Duration.prototype.toObject>;
                } = {};
                if (this.launch_stage != null) {
                    data.launch_stage = this.launch_stage;
                }
                if (this.sample_period != null) {
                    data.sample_period = this.sample_period.toObject();
                }
                if (this.ingest_delay != null) {
                    data.ingest_delay = this.ingest_delay.toObject();
                }
                return data;
            }
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
                const writer = w || new pb_1.BinaryWriter();
                if (this.launch_stage != dependency_2.google.api.LaunchStage.LAUNCH_STAGE_UNSPECIFIED)
                    writer.writeEnum(1, this.launch_stage);
                if (this.has_sample_period)
                    writer.writeMessage(2, this.sample_period, () => this.sample_period.serialize(writer));
                if (this.has_ingest_delay)
                    writer.writeMessage(3, this.ingest_delay, () => this.ingest_delay.serialize(writer));
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MetricDescriptorMetadata {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MetricDescriptorMetadata();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            message.launch_stage = reader.readEnum();
                            break;
                        case 2:
                            reader.readMessage(message.sample_period, () => message.sample_period = dependency_3.google.protobuf.Duration.deserialize(reader));
                            break;
                        case 3:
                            reader.readMessage(message.ingest_delay, () => message.ingest_delay = dependency_3.google.protobuf.Duration.deserialize(reader));
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary(): Uint8Array {
                return this.serialize();
            }
            static deserializeBinary(bytes: Uint8Array): MetricDescriptorMetadata {
                return MetricDescriptorMetadata.deserialize(bytes);
            }
        }
    }
    export class Metric extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            type?: string;
            labels?: Map<string, string>;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("labels" in data && data.labels != undefined) {
                    this.labels = data.labels;
                }
            }
            if (!this.labels)
                this.labels = new Map();
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set type(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get labels() {
            return pb_1.Message.getField(this, 2) as any as Map<string, string>;
        }
        set labels(value: Map<string, string>) {
            pb_1.Message.setField(this, 2, value as any);
        }
        static fromObject(data: {
            type?: string;
            labels?: {
                [key: string]: string;
            };
        }): Metric {
            const message = new Metric({});
            if (data.type != null) {
                message.type = data.type;
            }
            if (typeof data.labels == "object") {
                message.labels = new Map(Object.entries(data.labels));
            }
            return message;
        }
        toObject() {
            const data: {
                type?: string;
                labels?: {
                    [key: string]: string;
                };
            } = {};
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.labels != null) {
                data.labels = (Object.fromEntries)(this.labels);
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.type.length)
                writer.writeString(3, this.type);
            for (const [key, value] of this.labels) {
                writer.writeMessage(2, this.labels, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Metric {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Metric();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 3:
                        message.type = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.labels as any, reader, reader.readString, reader.readString));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Metric {
            return Metric.deserialize(bytes);
        }
    }
}
