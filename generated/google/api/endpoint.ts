/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: google/api/endpoint.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export namespace google.api {
    export class Endpoint extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            /** @deprecated*/
            aliases?: string[];
            target?: string;
            allow_cors?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("aliases" in data && data.aliases != undefined) {
                    this.aliases = data.aliases;
                }
                if ("target" in data && data.target != undefined) {
                    this.target = data.target;
                }
                if ("allow_cors" in data && data.allow_cors != undefined) {
                    this.allow_cors = data.allow_cors;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        /** @deprecated*/
        get aliases() {
            return pb_1.Message.getFieldWithDefault(this, 2, []) as string[];
        }
        /** @deprecated*/
        set aliases(value: string[]) {
            pb_1.Message.setField(this, 2, value);
        }
        get target() {
            return pb_1.Message.getFieldWithDefault(this, 101, "") as string;
        }
        set target(value: string) {
            pb_1.Message.setField(this, 101, value);
        }
        get allow_cors() {
            return pb_1.Message.getFieldWithDefault(this, 5, false) as boolean;
        }
        set allow_cors(value: boolean) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            name?: string;
            aliases?: string[];
            target?: string;
            allow_cors?: boolean;
        }): Endpoint {
            const message = new Endpoint({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.aliases != null) {
                message.aliases = data.aliases;
            }
            if (data.target != null) {
                message.target = data.target;
            }
            if (data.allow_cors != null) {
                message.allow_cors = data.allow_cors;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                aliases?: string[];
                target?: string;
                allow_cors?: boolean;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.aliases != null) {
                data.aliases = this.aliases;
            }
            if (this.target != null) {
                data.target = this.target;
            }
            if (this.allow_cors != null) {
                data.allow_cors = this.allow_cors;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.aliases.length)
                writer.writeRepeatedString(2, this.aliases);
            if (this.target.length)
                writer.writeString(101, this.target);
            if (this.allow_cors != false)
                writer.writeBool(5, this.allow_cors);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Endpoint {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Endpoint();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readString());
                        break;
                    case 101:
                        message.target = reader.readString();
                        break;
                    case 5:
                        message.allow_cors = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Endpoint {
            return Endpoint.deserialize(bytes);
        }
    }
}
