/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: google/api/apikeys/v2/resources.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../field_behavior";
import * as dependency_2 from "./../../resource";
import * as dependency_3 from "./../../../protobuf/timestamp";
import * as pb_1 from "google-protobuf";
export namespace google.api.apikeys.v2 {
    export class Key extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            uid?: string;
            display_name?: string;
            key_string?: string;
            create_time?: dependency_3.google.protobuf.Timestamp;
            update_time?: dependency_3.google.protobuf.Timestamp;
            delete_time?: dependency_3.google.protobuf.Timestamp;
            annotations?: Map<string, string>;
            restrictions?: Restrictions;
            etag?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("uid" in data && data.uid != undefined) {
                    this.uid = data.uid;
                }
                if ("display_name" in data && data.display_name != undefined) {
                    this.display_name = data.display_name;
                }
                if ("key_string" in data && data.key_string != undefined) {
                    this.key_string = data.key_string;
                }
                if ("create_time" in data && data.create_time != undefined) {
                    this.create_time = data.create_time;
                }
                if ("update_time" in data && data.update_time != undefined) {
                    this.update_time = data.update_time;
                }
                if ("delete_time" in data && data.delete_time != undefined) {
                    this.delete_time = data.delete_time;
                }
                if ("annotations" in data && data.annotations != undefined) {
                    this.annotations = data.annotations;
                }
                if ("restrictions" in data && data.restrictions != undefined) {
                    this.restrictions = data.restrictions;
                }
                if ("etag" in data && data.etag != undefined) {
                    this.etag = data.etag;
                }
            }
            if (!this.annotations)
                this.annotations = new Map();
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get uid() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set uid(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get display_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set display_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get key_string() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set key_string(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get create_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 4) as dependency_3.google.protobuf.Timestamp;
        }
        set create_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_create_time() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get update_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 6) as dependency_3.google.protobuf.Timestamp;
        }
        set update_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_update_time() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get delete_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 7) as dependency_3.google.protobuf.Timestamp;
        }
        set delete_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_delete_time() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get annotations() {
            return pb_1.Message.getField(this, 8) as any as Map<string, string>;
        }
        set annotations(value: Map<string, string>) {
            pb_1.Message.setField(this, 8, value as any);
        }
        get restrictions() {
            return pb_1.Message.getWrapperField(this, Restrictions, 9) as Restrictions;
        }
        set restrictions(value: Restrictions) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get has_restrictions() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get etag() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set etag(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        static fromObject(data: {
            name?: string;
            uid?: string;
            display_name?: string;
            key_string?: string;
            create_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            update_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            delete_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            annotations?: {
                [key: string]: string;
            };
            restrictions?: ReturnType<typeof Restrictions.prototype.toObject>;
            etag?: string;
        }): Key {
            const message = new Key({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.uid != null) {
                message.uid = data.uid;
            }
            if (data.display_name != null) {
                message.display_name = data.display_name;
            }
            if (data.key_string != null) {
                message.key_string = data.key_string;
            }
            if (data.create_time != null) {
                message.create_time = dependency_3.google.protobuf.Timestamp.fromObject(data.create_time);
            }
            if (data.update_time != null) {
                message.update_time = dependency_3.google.protobuf.Timestamp.fromObject(data.update_time);
            }
            if (data.delete_time != null) {
                message.delete_time = dependency_3.google.protobuf.Timestamp.fromObject(data.delete_time);
            }
            if (typeof data.annotations == "object") {
                message.annotations = new Map(Object.entries(data.annotations));
            }
            if (data.restrictions != null) {
                message.restrictions = Restrictions.fromObject(data.restrictions);
            }
            if (data.etag != null) {
                message.etag = data.etag;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                uid?: string;
                display_name?: string;
                key_string?: string;
                create_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                update_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                delete_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                annotations?: {
                    [key: string]: string;
                };
                restrictions?: ReturnType<typeof Restrictions.prototype.toObject>;
                etag?: string;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.uid != null) {
                data.uid = this.uid;
            }
            if (this.display_name != null) {
                data.display_name = this.display_name;
            }
            if (this.key_string != null) {
                data.key_string = this.key_string;
            }
            if (this.create_time != null) {
                data.create_time = this.create_time.toObject();
            }
            if (this.update_time != null) {
                data.update_time = this.update_time.toObject();
            }
            if (this.delete_time != null) {
                data.delete_time = this.delete_time.toObject();
            }
            if (this.annotations != null) {
                data.annotations = (Object.fromEntries)(this.annotations);
            }
            if (this.restrictions != null) {
                data.restrictions = this.restrictions.toObject();
            }
            if (this.etag != null) {
                data.etag = this.etag;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.uid.length)
                writer.writeString(5, this.uid);
            if (this.display_name.length)
                writer.writeString(2, this.display_name);
            if (this.key_string.length)
                writer.writeString(3, this.key_string);
            if (this.has_create_time)
                writer.writeMessage(4, this.create_time, () => this.create_time.serialize(writer));
            if (this.has_update_time)
                writer.writeMessage(6, this.update_time, () => this.update_time.serialize(writer));
            if (this.has_delete_time)
                writer.writeMessage(7, this.delete_time, () => this.delete_time.serialize(writer));
            for (const [key, value] of this.annotations) {
                writer.writeMessage(8, this.annotations, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (this.has_restrictions)
                writer.writeMessage(9, this.restrictions, () => this.restrictions.serialize(writer));
            if (this.etag.length)
                writer.writeString(11, this.etag);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Key {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Key();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 5:
                        message.uid = reader.readString();
                        break;
                    case 2:
                        message.display_name = reader.readString();
                        break;
                    case 3:
                        message.key_string = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.create_time, () => message.create_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.update_time, () => message.update_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.delete_time, () => message.delete_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.annotations as any, reader, reader.readString, reader.readString));
                        break;
                    case 9:
                        reader.readMessage(message.restrictions, () => message.restrictions = Restrictions.deserialize(reader));
                        break;
                    case 11:
                        message.etag = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Key {
            return Key.deserialize(bytes);
        }
    }
    export class Restrictions extends pb_1.Message {
        #one_of_decls: number[][] = [[1, 2, 3, 4]];
        constructor(data?: any[] | ({
            api_targets?: ApiTarget[];
        } & (({
            browser_key_restrictions?: BrowserKeyRestrictions;
            server_key_restrictions?: never;
            android_key_restrictions?: never;
            ios_key_restrictions?: never;
        } | {
            browser_key_restrictions?: never;
            server_key_restrictions?: ServerKeyRestrictions;
            android_key_restrictions?: never;
            ios_key_restrictions?: never;
        } | {
            browser_key_restrictions?: never;
            server_key_restrictions?: never;
            android_key_restrictions?: AndroidKeyRestrictions;
            ios_key_restrictions?: never;
        } | {
            browser_key_restrictions?: never;
            server_key_restrictions?: never;
            android_key_restrictions?: never;
            ios_key_restrictions?: IosKeyRestrictions;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [5], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("browser_key_restrictions" in data && data.browser_key_restrictions != undefined) {
                    this.browser_key_restrictions = data.browser_key_restrictions;
                }
                if ("server_key_restrictions" in data && data.server_key_restrictions != undefined) {
                    this.server_key_restrictions = data.server_key_restrictions;
                }
                if ("android_key_restrictions" in data && data.android_key_restrictions != undefined) {
                    this.android_key_restrictions = data.android_key_restrictions;
                }
                if ("ios_key_restrictions" in data && data.ios_key_restrictions != undefined) {
                    this.ios_key_restrictions = data.ios_key_restrictions;
                }
                if ("api_targets" in data && data.api_targets != undefined) {
                    this.api_targets = data.api_targets;
                }
            }
        }
        get browser_key_restrictions() {
            return pb_1.Message.getWrapperField(this, BrowserKeyRestrictions, 1) as BrowserKeyRestrictions;
        }
        set browser_key_restrictions(value: BrowserKeyRestrictions) {
            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);
        }
        get has_browser_key_restrictions() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get server_key_restrictions() {
            return pb_1.Message.getWrapperField(this, ServerKeyRestrictions, 2) as ServerKeyRestrictions;
        }
        set server_key_restrictions(value: ServerKeyRestrictions) {
            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);
        }
        get has_server_key_restrictions() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get android_key_restrictions() {
            return pb_1.Message.getWrapperField(this, AndroidKeyRestrictions, 3) as AndroidKeyRestrictions;
        }
        set android_key_restrictions(value: AndroidKeyRestrictions) {
            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[0], value);
        }
        get has_android_key_restrictions() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get ios_key_restrictions() {
            return pb_1.Message.getWrapperField(this, IosKeyRestrictions, 4) as IosKeyRestrictions;
        }
        set ios_key_restrictions(value: IosKeyRestrictions) {
            pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[0], value);
        }
        get has_ios_key_restrictions() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get api_targets() {
            return pb_1.Message.getRepeatedWrapperField(this, ApiTarget, 5) as ApiTarget[];
        }
        set api_targets(value: ApiTarget[]) {
            pb_1.Message.setRepeatedWrapperField(this, 5, value);
        }
        get client_restrictions() {
            const cases: {
                [index: number]: "none" | "browser_key_restrictions" | "server_key_restrictions" | "android_key_restrictions" | "ios_key_restrictions";
            } = {
                0: "none",
                1: "browser_key_restrictions",
                2: "server_key_restrictions",
                3: "android_key_restrictions",
                4: "ios_key_restrictions"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1, 2, 3, 4])];
        }
        static fromObject(data: {
            browser_key_restrictions?: ReturnType<typeof BrowserKeyRestrictions.prototype.toObject>;
            server_key_restrictions?: ReturnType<typeof ServerKeyRestrictions.prototype.toObject>;
            android_key_restrictions?: ReturnType<typeof AndroidKeyRestrictions.prototype.toObject>;
            ios_key_restrictions?: ReturnType<typeof IosKeyRestrictions.prototype.toObject>;
            api_targets?: ReturnType<typeof ApiTarget.prototype.toObject>[];
        }): Restrictions {
            const message = new Restrictions({});
            if (data.browser_key_restrictions != null) {
                message.browser_key_restrictions = BrowserKeyRestrictions.fromObject(data.browser_key_restrictions);
            }
            if (data.server_key_restrictions != null) {
                message.server_key_restrictions = ServerKeyRestrictions.fromObject(data.server_key_restrictions);
            }
            if (data.android_key_restrictions != null) {
                message.android_key_restrictions = AndroidKeyRestrictions.fromObject(data.android_key_restrictions);
            }
            if (data.ios_key_restrictions != null) {
                message.ios_key_restrictions = IosKeyRestrictions.fromObject(data.ios_key_restrictions);
            }
            if (data.api_targets != null) {
                message.api_targets = data.api_targets.map(item => ApiTarget.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                browser_key_restrictions?: ReturnType<typeof BrowserKeyRestrictions.prototype.toObject>;
                server_key_restrictions?: ReturnType<typeof ServerKeyRestrictions.prototype.toObject>;
                android_key_restrictions?: ReturnType<typeof AndroidKeyRestrictions.prototype.toObject>;
                ios_key_restrictions?: ReturnType<typeof IosKeyRestrictions.prototype.toObject>;
                api_targets?: ReturnType<typeof ApiTarget.prototype.toObject>[];
            } = {};
            if (this.browser_key_restrictions != null) {
                data.browser_key_restrictions = this.browser_key_restrictions.toObject();
            }
            if (this.server_key_restrictions != null) {
                data.server_key_restrictions = this.server_key_restrictions.toObject();
            }
            if (this.android_key_restrictions != null) {
                data.android_key_restrictions = this.android_key_restrictions.toObject();
            }
            if (this.ios_key_restrictions != null) {
                data.ios_key_restrictions = this.ios_key_restrictions.toObject();
            }
            if (this.api_targets != null) {
                data.api_targets = this.api_targets.map((item: ApiTarget) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_browser_key_restrictions)
                writer.writeMessage(1, this.browser_key_restrictions, () => this.browser_key_restrictions.serialize(writer));
            if (this.has_server_key_restrictions)
                writer.writeMessage(2, this.server_key_restrictions, () => this.server_key_restrictions.serialize(writer));
            if (this.has_android_key_restrictions)
                writer.writeMessage(3, this.android_key_restrictions, () => this.android_key_restrictions.serialize(writer));
            if (this.has_ios_key_restrictions)
                writer.writeMessage(4, this.ios_key_restrictions, () => this.ios_key_restrictions.serialize(writer));
            if (this.api_targets.length)
                writer.writeRepeatedMessage(5, this.api_targets, (item: ApiTarget) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Restrictions {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Restrictions();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.browser_key_restrictions, () => message.browser_key_restrictions = BrowserKeyRestrictions.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.server_key_restrictions, () => message.server_key_restrictions = ServerKeyRestrictions.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.android_key_restrictions, () => message.android_key_restrictions = AndroidKeyRestrictions.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.ios_key_restrictions, () => message.ios_key_restrictions = IosKeyRestrictions.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.api_targets, () => pb_1.Message.addToRepeatedWrapperField(message, 5, ApiTarget.deserialize(reader), ApiTarget));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Restrictions {
            return Restrictions.deserialize(bytes);
        }
    }
    export class BrowserKeyRestrictions extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            allowed_referrers?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("allowed_referrers" in data && data.allowed_referrers != undefined) {
                    this.allowed_referrers = data.allowed_referrers;
                }
            }
        }
        get allowed_referrers() {
            return pb_1.Message.getFieldWithDefault(this, 1, []) as string[];
        }
        set allowed_referrers(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            allowed_referrers?: string[];
        }): BrowserKeyRestrictions {
            const message = new BrowserKeyRestrictions({});
            if (data.allowed_referrers != null) {
                message.allowed_referrers = data.allowed_referrers;
            }
            return message;
        }
        toObject() {
            const data: {
                allowed_referrers?: string[];
            } = {};
            if (this.allowed_referrers != null) {
                data.allowed_referrers = this.allowed_referrers;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.allowed_referrers.length)
                writer.writeRepeatedString(1, this.allowed_referrers);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): BrowserKeyRestrictions {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BrowserKeyRestrictions();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): BrowserKeyRestrictions {
            return BrowserKeyRestrictions.deserialize(bytes);
        }
    }
    export class ServerKeyRestrictions extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            allowed_ips?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("allowed_ips" in data && data.allowed_ips != undefined) {
                    this.allowed_ips = data.allowed_ips;
                }
            }
        }
        get allowed_ips() {
            return pb_1.Message.getFieldWithDefault(this, 1, []) as string[];
        }
        set allowed_ips(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            allowed_ips?: string[];
        }): ServerKeyRestrictions {
            const message = new ServerKeyRestrictions({});
            if (data.allowed_ips != null) {
                message.allowed_ips = data.allowed_ips;
            }
            return message;
        }
        toObject() {
            const data: {
                allowed_ips?: string[];
            } = {};
            if (this.allowed_ips != null) {
                data.allowed_ips = this.allowed_ips;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.allowed_ips.length)
                writer.writeRepeatedString(1, this.allowed_ips);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ServerKeyRestrictions {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ServerKeyRestrictions();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ServerKeyRestrictions {
            return ServerKeyRestrictions.deserialize(bytes);
        }
    }
    export class AndroidKeyRestrictions extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            allowed_applications?: AndroidApplication[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("allowed_applications" in data && data.allowed_applications != undefined) {
                    this.allowed_applications = data.allowed_applications;
                }
            }
        }
        get allowed_applications() {
            return pb_1.Message.getRepeatedWrapperField(this, AndroidApplication, 1) as AndroidApplication[];
        }
        set allowed_applications(value: AndroidApplication[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data: {
            allowed_applications?: ReturnType<typeof AndroidApplication.prototype.toObject>[];
        }): AndroidKeyRestrictions {
            const message = new AndroidKeyRestrictions({});
            if (data.allowed_applications != null) {
                message.allowed_applications = data.allowed_applications.map(item => AndroidApplication.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                allowed_applications?: ReturnType<typeof AndroidApplication.prototype.toObject>[];
            } = {};
            if (this.allowed_applications != null) {
                data.allowed_applications = this.allowed_applications.map((item: AndroidApplication) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.allowed_applications.length)
                writer.writeRepeatedMessage(1, this.allowed_applications, (item: AndroidApplication) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AndroidKeyRestrictions {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AndroidKeyRestrictions();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.allowed_applications, () => pb_1.Message.addToRepeatedWrapperField(message, 1, AndroidApplication.deserialize(reader), AndroidApplication));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AndroidKeyRestrictions {
            return AndroidKeyRestrictions.deserialize(bytes);
        }
    }
    export class AndroidApplication extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            sha1_fingerprint?: string;
            package_name?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("sha1_fingerprint" in data && data.sha1_fingerprint != undefined) {
                    this.sha1_fingerprint = data.sha1_fingerprint;
                }
                if ("package_name" in data && data.package_name != undefined) {
                    this.package_name = data.package_name;
                }
            }
        }
        get sha1_fingerprint() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set sha1_fingerprint(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get package_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set package_name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            sha1_fingerprint?: string;
            package_name?: string;
        }): AndroidApplication {
            const message = new AndroidApplication({});
            if (data.sha1_fingerprint != null) {
                message.sha1_fingerprint = data.sha1_fingerprint;
            }
            if (data.package_name != null) {
                message.package_name = data.package_name;
            }
            return message;
        }
        toObject() {
            const data: {
                sha1_fingerprint?: string;
                package_name?: string;
            } = {};
            if (this.sha1_fingerprint != null) {
                data.sha1_fingerprint = this.sha1_fingerprint;
            }
            if (this.package_name != null) {
                data.package_name = this.package_name;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.sha1_fingerprint.length)
                writer.writeString(1, this.sha1_fingerprint);
            if (this.package_name.length)
                writer.writeString(2, this.package_name);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AndroidApplication {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AndroidApplication();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.sha1_fingerprint = reader.readString();
                        break;
                    case 2:
                        message.package_name = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AndroidApplication {
            return AndroidApplication.deserialize(bytes);
        }
    }
    export class IosKeyRestrictions extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            allowed_bundle_ids?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("allowed_bundle_ids" in data && data.allowed_bundle_ids != undefined) {
                    this.allowed_bundle_ids = data.allowed_bundle_ids;
                }
            }
        }
        get allowed_bundle_ids() {
            return pb_1.Message.getFieldWithDefault(this, 1, []) as string[];
        }
        set allowed_bundle_ids(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            allowed_bundle_ids?: string[];
        }): IosKeyRestrictions {
            const message = new IosKeyRestrictions({});
            if (data.allowed_bundle_ids != null) {
                message.allowed_bundle_ids = data.allowed_bundle_ids;
            }
            return message;
        }
        toObject() {
            const data: {
                allowed_bundle_ids?: string[];
            } = {};
            if (this.allowed_bundle_ids != null) {
                data.allowed_bundle_ids = this.allowed_bundle_ids;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.allowed_bundle_ids.length)
                writer.writeRepeatedString(1, this.allowed_bundle_ids);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): IosKeyRestrictions {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new IosKeyRestrictions();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): IosKeyRestrictions {
            return IosKeyRestrictions.deserialize(bytes);
        }
    }
    export class ApiTarget extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            service?: string;
            methods?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("service" in data && data.service != undefined) {
                    this.service = data.service;
                }
                if ("methods" in data && data.methods != undefined) {
                    this.methods = data.methods;
                }
            }
        }
        get service() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set service(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get methods() {
            return pb_1.Message.getFieldWithDefault(this, 2, []) as string[];
        }
        set methods(value: string[]) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            service?: string;
            methods?: string[];
        }): ApiTarget {
            const message = new ApiTarget({});
            if (data.service != null) {
                message.service = data.service;
            }
            if (data.methods != null) {
                message.methods = data.methods;
            }
            return message;
        }
        toObject() {
            const data: {
                service?: string;
                methods?: string[];
            } = {};
            if (this.service != null) {
                data.service = this.service;
            }
            if (this.methods != null) {
                data.methods = this.methods;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.service.length)
                writer.writeString(1, this.service);
            if (this.methods.length)
                writer.writeRepeatedString(2, this.methods);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ApiTarget {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ApiTarget();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.service = reader.readString();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ApiTarget {
            return ApiTarget.deserialize(bytes);
        }
    }
}
