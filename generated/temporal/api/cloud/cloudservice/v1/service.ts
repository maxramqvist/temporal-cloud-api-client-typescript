/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: temporal/api/cloud/cloudservice/v1/service.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./request_response";
import * as dependency_2 from "./../../../../../google/api/annotations";
import * as grpc_1 from "@grpc/grpc-js";
export namespace temporal.api.cloud.cloudservice.v1 {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedCloudServiceService {
        static definition = {
            GetUsers: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetUsers",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersResponse.deserialize(new Uint8Array(bytes))
            },
            GetUser: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetUserRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetUserResponse.deserialize(new Uint8Array(bytes))
            },
            CreateUser: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/CreateUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateUser: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/UpdateUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteUser: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/DeleteUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserResponse.deserialize(new Uint8Array(bytes))
            },
            SetUserNamespaceAccess: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/SetUserNamespaceAccess",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessResponse.deserialize(new Uint8Array(bytes))
            },
            GetAsyncOperation: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetAsyncOperation",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationResponse.deserialize(new Uint8Array(bytes))
            },
            CreateNamespace: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/CreateNamespace",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceResponse.deserialize(new Uint8Array(bytes))
            },
            GetNamespaces: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetNamespaces",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesResponse.deserialize(new Uint8Array(bytes))
            },
            GetNamespace: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetNamespace",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateNamespace: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/UpdateNamespace",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceResponse.deserialize(new Uint8Array(bytes))
            },
            RenameCustomSearchAttribute: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/RenameCustomSearchAttribute",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteNamespace: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/DeleteNamespace",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceResponse.deserialize(new Uint8Array(bytes))
            },
            FailoverNamespaceRegion: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/FailoverNamespaceRegion",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionResponse.deserialize(new Uint8Array(bytes))
            },
            AddNamespaceRegion: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/AddNamespaceRegion",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionResponse.deserialize(new Uint8Array(bytes))
            },
            GetRegions: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetRegions",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsResponse.deserialize(new Uint8Array(bytes))
            },
            GetRegion: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetRegion",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionResponse.deserialize(new Uint8Array(bytes))
            },
            GetApiKeys: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetApiKeys",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysResponse.deserialize(new Uint8Array(bytes))
            },
            GetApiKey: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetApiKey",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyResponse.deserialize(new Uint8Array(bytes))
            },
            CreateApiKey: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/CreateApiKey",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateApiKey: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/UpdateApiKey",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteApiKey: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/DeleteApiKey",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyResponse.deserialize(new Uint8Array(bytes))
            },
            GetUserGroups: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetUserGroups",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsResponse.deserialize(new Uint8Array(bytes))
            },
            GetUserGroup: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetUserGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupResponse.deserialize(new Uint8Array(bytes))
            },
            CreateUserGroup: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/CreateUserGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateUserGroup: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/UpdateUserGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteUserGroup: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/DeleteUserGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupResponse.deserialize(new Uint8Array(bytes))
            },
            SetUserGroupNamespaceAccess: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/SetUserGroupNamespaceAccess",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessResponse.deserialize(new Uint8Array(bytes))
            },
            CreateServiceAccount: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/CreateServiceAccount",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountResponse.deserialize(new Uint8Array(bytes))
            },
            GetServiceAccount: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetServiceAccount",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountResponse.deserialize(new Uint8Array(bytes))
            },
            GetServiceAccounts: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/GetServiceAccounts",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateServiceAccount: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/UpdateServiceAccount",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteServiceAccount: {
                path: "/temporal.api.cloud.cloudservice.v1.CloudService/DeleteServiceAccount",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract GetUsers(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersResponse>): void;
        abstract GetUser(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetUserResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserResponse>): void;
        abstract CreateUser(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserResponse>): void;
        abstract UpdateUser(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserResponse>): void;
        abstract DeleteUser(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserResponse>): void;
        abstract SetUserNamespaceAccess(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessRequest, dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessResponse>): void;
        abstract GetAsyncOperation(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationResponse>): void;
        abstract CreateNamespace(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceResponse>): void;
        abstract GetNamespaces(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesResponse>): void;
        abstract GetNamespace(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceResponse>): void;
        abstract UpdateNamespace(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceResponse>): void;
        abstract RenameCustomSearchAttribute(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeRequest, dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeResponse>): void;
        abstract DeleteNamespace(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceResponse>): void;
        abstract FailoverNamespaceRegion(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionRequest, dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionResponse>): void;
        abstract AddNamespaceRegion(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionRequest, dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionResponse>): void;
        abstract GetRegions(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsResponse>): void;
        abstract GetRegion(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionResponse>): void;
        abstract GetApiKeys(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysResponse>): void;
        abstract GetApiKey(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyResponse>): void;
        abstract CreateApiKey(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyResponse>): void;
        abstract UpdateApiKey(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyResponse>): void;
        abstract DeleteApiKey(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyResponse>): void;
        abstract GetUserGroups(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsResponse>): void;
        abstract GetUserGroup(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupResponse>): void;
        abstract CreateUserGroup(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupResponse>): void;
        abstract UpdateUserGroup(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupResponse>): void;
        abstract DeleteUserGroup(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupResponse>): void;
        abstract SetUserGroupNamespaceAccess(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessRequest, dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessResponse>): void;
        abstract CreateServiceAccount(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountResponse>): void;
        abstract GetServiceAccount(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountResponse>): void;
        abstract GetServiceAccounts(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsResponse>): void;
        abstract UpdateServiceAccount(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountResponse>): void;
        abstract DeleteServiceAccount(call: grpc_1.ServerUnaryCall<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountResponse>, callback: grpc_1.sendUnaryData<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountResponse>): void;
    }
    export class CloudServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedCloudServiceService.definition, "CloudService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        GetUsers: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUsersResponse>): grpc_1.ClientUnaryCall => {
            return super.GetUsers(message, metadata, options, callback);
        };
        GetUser: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetUserResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserResponse>): grpc_1.ClientUnaryCall => {
            return super.GetUser(message, metadata, options, callback);
        };
        CreateUser: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateUser(message, metadata, options, callback);
        };
        UpdateUser: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateUser(message, metadata, options, callback);
        };
        DeleteUser: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteUser(message, metadata, options, callback);
        };
        SetUserNamespaceAccess: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessRequest, dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserNamespaceAccessResponse>): grpc_1.ClientUnaryCall => {
            return super.SetUserNamespaceAccess(message, metadata, options, callback);
        };
        GetAsyncOperation: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetAsyncOperationResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAsyncOperation(message, metadata, options, callback);
        };
        CreateNamespace: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateNamespaceResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateNamespace(message, metadata, options, callback);
        };
        GetNamespaces: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespacesResponse>): grpc_1.ClientUnaryCall => {
            return super.GetNamespaces(message, metadata, options, callback);
        };
        GetNamespace: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetNamespaceResponse>): grpc_1.ClientUnaryCall => {
            return super.GetNamespace(message, metadata, options, callback);
        };
        UpdateNamespace: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateNamespaceResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateNamespace(message, metadata, options, callback);
        };
        RenameCustomSearchAttribute: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeRequest, dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.RenameCustomSearchAttributeResponse>): grpc_1.ClientUnaryCall => {
            return super.RenameCustomSearchAttribute(message, metadata, options, callback);
        };
        DeleteNamespace: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteNamespaceResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteNamespace(message, metadata, options, callback);
        };
        FailoverNamespaceRegion: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionRequest, dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.FailoverNamespaceRegionResponse>): grpc_1.ClientUnaryCall => {
            return super.FailoverNamespaceRegion(message, metadata, options, callback);
        };
        AddNamespaceRegion: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionRequest, dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.AddNamespaceRegionResponse>): grpc_1.ClientUnaryCall => {
            return super.AddNamespaceRegion(message, metadata, options, callback);
        };
        GetRegions: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionsResponse>): grpc_1.ClientUnaryCall => {
            return super.GetRegions(message, metadata, options, callback);
        };
        GetRegion: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetRegionResponse>): grpc_1.ClientUnaryCall => {
            return super.GetRegion(message, metadata, options, callback);
        };
        GetApiKeys: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeysResponse>): grpc_1.ClientUnaryCall => {
            return super.GetApiKeys(message, metadata, options, callback);
        };
        GetApiKey: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetApiKeyResponse>): grpc_1.ClientUnaryCall => {
            return super.GetApiKey(message, metadata, options, callback);
        };
        CreateApiKey: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateApiKeyResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateApiKey(message, metadata, options, callback);
        };
        UpdateApiKey: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateApiKeyResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateApiKey(message, metadata, options, callback);
        };
        DeleteApiKey: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteApiKeyResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteApiKey(message, metadata, options, callback);
        };
        GetUserGroups: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupsResponse>): grpc_1.ClientUnaryCall => {
            return super.GetUserGroups(message, metadata, options, callback);
        };
        GetUserGroup: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetUserGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.GetUserGroup(message, metadata, options, callback);
        };
        CreateUserGroup: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateUserGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateUserGroup(message, metadata, options, callback);
        };
        UpdateUserGroup: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateUserGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateUserGroup(message, metadata, options, callback);
        };
        DeleteUserGroup: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteUserGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteUserGroup(message, metadata, options, callback);
        };
        SetUserGroupNamespaceAccess: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessRequest, dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.SetUserGroupNamespaceAccessResponse>): grpc_1.ClientUnaryCall => {
            return super.SetUserGroupNamespaceAccess(message, metadata, options, callback);
        };
        CreateServiceAccount: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountRequest, dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.CreateServiceAccountResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateServiceAccount(message, metadata, options, callback);
        };
        GetServiceAccount: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountResponse>): grpc_1.ClientUnaryCall => {
            return super.GetServiceAccount(message, metadata, options, callback);
        };
        GetServiceAccounts: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsRequest, dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.GetServiceAccountsResponse>): grpc_1.ClientUnaryCall => {
            return super.GetServiceAccounts(message, metadata, options, callback);
        };
        UpdateServiceAccount: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountRequest, dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.UpdateServiceAccountResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateServiceAccount(message, metadata, options, callback);
        };
        DeleteServiceAccount: GrpcUnaryServiceInterface<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountRequest, dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountResponse> = (message: dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountResponse>, callback?: grpc_1.requestCallback<dependency_1.temporal.api.cloud.cloudservice.v1.DeleteServiceAccountResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteServiceAccount(message, metadata, options, callback);
        };
    }
}
