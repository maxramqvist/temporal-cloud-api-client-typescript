/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: temporal/api/cloud/identity/v1/message.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../../../google/protobuf/timestamp";
import * as pb_1 from "google-protobuf";
export namespace temporal.api.cloud.identity.v1 {
    export class AccountAccess extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            role?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("role" in data && data.role != undefined) {
                    this.role = data.role;
                }
            }
        }
        get role() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set role(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            role?: string;
        }): AccountAccess {
            const message = new AccountAccess({});
            if (data.role != null) {
                message.role = data.role;
            }
            return message;
        }
        toObject() {
            const data: {
                role?: string;
            } = {};
            if (this.role != null) {
                data.role = this.role;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.role.length)
                writer.writeString(1, this.role);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AccountAccess {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AccountAccess();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.role = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AccountAccess {
            return AccountAccess.deserialize(bytes);
        }
    }
    export class NamespaceAccess extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            permission?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("permission" in data && data.permission != undefined) {
                    this.permission = data.permission;
                }
            }
        }
        get permission() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set permission(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            permission?: string;
        }): NamespaceAccess {
            const message = new NamespaceAccess({});
            if (data.permission != null) {
                message.permission = data.permission;
            }
            return message;
        }
        toObject() {
            const data: {
                permission?: string;
            } = {};
            if (this.permission != null) {
                data.permission = this.permission;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.permission.length)
                writer.writeString(1, this.permission);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): NamespaceAccess {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new NamespaceAccess();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.permission = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): NamespaceAccess {
            return NamespaceAccess.deserialize(bytes);
        }
    }
    export class Access extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            account_access?: AccountAccess;
            namespace_accesses?: Map<string, NamespaceAccess>;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("account_access" in data && data.account_access != undefined) {
                    this.account_access = data.account_access;
                }
                if ("namespace_accesses" in data && data.namespace_accesses != undefined) {
                    this.namespace_accesses = data.namespace_accesses;
                }
            }
            if (!this.namespace_accesses)
                this.namespace_accesses = new Map();
        }
        get account_access() {
            return pb_1.Message.getWrapperField(this, AccountAccess, 1) as AccountAccess;
        }
        set account_access(value: AccountAccess) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_account_access() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get namespace_accesses() {
            return pb_1.Message.getField(this, 2) as any as Map<string, NamespaceAccess>;
        }
        set namespace_accesses(value: Map<string, NamespaceAccess>) {
            pb_1.Message.setField(this, 2, value as any);
        }
        static fromObject(data: {
            account_access?: ReturnType<typeof AccountAccess.prototype.toObject>;
            namespace_accesses?: {
                [key: string]: ReturnType<typeof NamespaceAccess.prototype.toObject>;
            };
        }): Access {
            const message = new Access({});
            if (data.account_access != null) {
                message.account_access = AccountAccess.fromObject(data.account_access);
            }
            if (typeof data.namespace_accesses == "object") {
                message.namespace_accesses = new Map(Object.entries(data.namespace_accesses).map(([key, value]) => [key, NamespaceAccess.fromObject(value)]));
            }
            return message;
        }
        toObject() {
            const data: {
                account_access?: ReturnType<typeof AccountAccess.prototype.toObject>;
                namespace_accesses?: {
                    [key: string]: ReturnType<typeof NamespaceAccess.prototype.toObject>;
                };
            } = {};
            if (this.account_access != null) {
                data.account_access = this.account_access.toObject();
            }
            if (this.namespace_accesses != null) {
                data.namespace_accesses = (Object.fromEntries)((Array.from)(this.namespace_accesses).map(([key, value]) => [key, value.toObject()]));
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_account_access)
                writer.writeMessage(1, this.account_access, () => this.account_access.serialize(writer));
            for (const [key, value] of this.namespace_accesses) {
                writer.writeMessage(2, this.namespace_accesses, () => {
                    writer.writeString(1, key);
                    writer.writeMessage(2, value, () => value.serialize(writer));
                });
            }
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Access {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Access();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.account_access, () => message.account_access = AccountAccess.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.namespace_accesses as any, reader, reader.readString, () => {
                            let value;
                            reader.readMessage(message, () => value = NamespaceAccess.deserialize(reader));
                            return value;
                        }));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Access {
            return Access.deserialize(bytes);
        }
    }
    export class UserSpec extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            email?: string;
            access?: Access;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("email" in data && data.email != undefined) {
                    this.email = data.email;
                }
                if ("access" in data && data.access != undefined) {
                    this.access = data.access;
                }
            }
        }
        get email() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set email(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get access() {
            return pb_1.Message.getWrapperField(this, Access, 2) as Access;
        }
        set access(value: Access) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_access() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            email?: string;
            access?: ReturnType<typeof Access.prototype.toObject>;
        }): UserSpec {
            const message = new UserSpec({});
            if (data.email != null) {
                message.email = data.email;
            }
            if (data.access != null) {
                message.access = Access.fromObject(data.access);
            }
            return message;
        }
        toObject() {
            const data: {
                email?: string;
                access?: ReturnType<typeof Access.prototype.toObject>;
            } = {};
            if (this.email != null) {
                data.email = this.email;
            }
            if (this.access != null) {
                data.access = this.access.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.email.length)
                writer.writeString(1, this.email);
            if (this.has_access)
                writer.writeMessage(2, this.access, () => this.access.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UserSpec {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UserSpec();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.email = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.access, () => message.access = Access.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UserSpec {
            return UserSpec.deserialize(bytes);
        }
    }
    export class Invitation extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            created_time?: dependency_1.google.protobuf.Timestamp;
            expired_time?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("created_time" in data && data.created_time != undefined) {
                    this.created_time = data.created_time;
                }
                if ("expired_time" in data && data.expired_time != undefined) {
                    this.expired_time = data.expired_time;
                }
            }
        }
        get created_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 1) as dependency_1.google.protobuf.Timestamp;
        }
        set created_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_created_time() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get expired_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 2) as dependency_1.google.protobuf.Timestamp;
        }
        set expired_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_expired_time() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            expired_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): Invitation {
            const message = new Invitation({});
            if (data.created_time != null) {
                message.created_time = dependency_1.google.protobuf.Timestamp.fromObject(data.created_time);
            }
            if (data.expired_time != null) {
                message.expired_time = dependency_1.google.protobuf.Timestamp.fromObject(data.expired_time);
            }
            return message;
        }
        toObject() {
            const data: {
                created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                expired_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.created_time != null) {
                data.created_time = this.created_time.toObject();
            }
            if (this.expired_time != null) {
                data.expired_time = this.expired_time.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_created_time)
                writer.writeMessage(1, this.created_time, () => this.created_time.serialize(writer));
            if (this.has_expired_time)
                writer.writeMessage(2, this.expired_time, () => this.expired_time.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Invitation {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Invitation();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.created_time, () => message.created_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.expired_time, () => message.expired_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Invitation {
            return Invitation.deserialize(bytes);
        }
    }
    export class User extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            resource_version?: string;
            spec?: UserSpec;
            state?: string;
            async_operation_id?: string;
            invitation?: Invitation;
            created_time?: dependency_1.google.protobuf.Timestamp;
            last_modified_time?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("resource_version" in data && data.resource_version != undefined) {
                    this.resource_version = data.resource_version;
                }
                if ("spec" in data && data.spec != undefined) {
                    this.spec = data.spec;
                }
                if ("state" in data && data.state != undefined) {
                    this.state = data.state;
                }
                if ("async_operation_id" in data && data.async_operation_id != undefined) {
                    this.async_operation_id = data.async_operation_id;
                }
                if ("invitation" in data && data.invitation != undefined) {
                    this.invitation = data.invitation;
                }
                if ("created_time" in data && data.created_time != undefined) {
                    this.created_time = data.created_time;
                }
                if ("last_modified_time" in data && data.last_modified_time != undefined) {
                    this.last_modified_time = data.last_modified_time;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get resource_version() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set resource_version(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get spec() {
            return pb_1.Message.getWrapperField(this, UserSpec, 3) as UserSpec;
        }
        set spec(value: UserSpec) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_spec() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get state() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set state(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get async_operation_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set async_operation_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get invitation() {
            return pb_1.Message.getWrapperField(this, Invitation, 6) as Invitation;
        }
        set invitation(value: Invitation) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_invitation() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get created_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 7) as dependency_1.google.protobuf.Timestamp;
        }
        set created_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_created_time() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get last_modified_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 8) as dependency_1.google.protobuf.Timestamp;
        }
        set last_modified_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get has_last_modified_time() {
            return pb_1.Message.getField(this, 8) != null;
        }
        static fromObject(data: {
            id?: string;
            resource_version?: string;
            spec?: ReturnType<typeof UserSpec.prototype.toObject>;
            state?: string;
            async_operation_id?: string;
            invitation?: ReturnType<typeof Invitation.prototype.toObject>;
            created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            last_modified_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): User {
            const message = new User({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.resource_version != null) {
                message.resource_version = data.resource_version;
            }
            if (data.spec != null) {
                message.spec = UserSpec.fromObject(data.spec);
            }
            if (data.state != null) {
                message.state = data.state;
            }
            if (data.async_operation_id != null) {
                message.async_operation_id = data.async_operation_id;
            }
            if (data.invitation != null) {
                message.invitation = Invitation.fromObject(data.invitation);
            }
            if (data.created_time != null) {
                message.created_time = dependency_1.google.protobuf.Timestamp.fromObject(data.created_time);
            }
            if (data.last_modified_time != null) {
                message.last_modified_time = dependency_1.google.protobuf.Timestamp.fromObject(data.last_modified_time);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                resource_version?: string;
                spec?: ReturnType<typeof UserSpec.prototype.toObject>;
                state?: string;
                async_operation_id?: string;
                invitation?: ReturnType<typeof Invitation.prototype.toObject>;
                created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                last_modified_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.resource_version != null) {
                data.resource_version = this.resource_version;
            }
            if (this.spec != null) {
                data.spec = this.spec.toObject();
            }
            if (this.state != null) {
                data.state = this.state;
            }
            if (this.async_operation_id != null) {
                data.async_operation_id = this.async_operation_id;
            }
            if (this.invitation != null) {
                data.invitation = this.invitation.toObject();
            }
            if (this.created_time != null) {
                data.created_time = this.created_time.toObject();
            }
            if (this.last_modified_time != null) {
                data.last_modified_time = this.last_modified_time.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.resource_version.length)
                writer.writeString(2, this.resource_version);
            if (this.has_spec)
                writer.writeMessage(3, this.spec, () => this.spec.serialize(writer));
            if (this.state.length)
                writer.writeString(4, this.state);
            if (this.async_operation_id.length)
                writer.writeString(5, this.async_operation_id);
            if (this.has_invitation)
                writer.writeMessage(6, this.invitation, () => this.invitation.serialize(writer));
            if (this.has_created_time)
                writer.writeMessage(7, this.created_time, () => this.created_time.serialize(writer));
            if (this.has_last_modified_time)
                writer.writeMessage(8, this.last_modified_time, () => this.last_modified_time.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): User {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new User();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.resource_version = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.spec, () => message.spec = UserSpec.deserialize(reader));
                        break;
                    case 4:
                        message.state = reader.readString();
                        break;
                    case 5:
                        message.async_operation_id = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.invitation, () => message.invitation = Invitation.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.created_time, () => message.created_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message.last_modified_time, () => message.last_modified_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): User {
            return User.deserialize(bytes);
        }
    }
    export class UserGroupSpec extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            access?: Access;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("access" in data && data.access != undefined) {
                    this.access = data.access;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get access() {
            return pb_1.Message.getWrapperField(this, Access, 2) as Access;
        }
        set access(value: Access) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_access() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            name?: string;
            access?: ReturnType<typeof Access.prototype.toObject>;
        }): UserGroupSpec {
            const message = new UserGroupSpec({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.access != null) {
                message.access = Access.fromObject(data.access);
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                access?: ReturnType<typeof Access.prototype.toObject>;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.access != null) {
                data.access = this.access.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.has_access)
                writer.writeMessage(2, this.access, () => this.access.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UserGroupSpec {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UserGroupSpec();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.access, () => message.access = Access.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UserGroupSpec {
            return UserGroupSpec.deserialize(bytes);
        }
    }
    export class UserGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            resource_version?: string;
            spec?: UserGroupSpec;
            state?: string;
            async_operation_id?: string;
            created_time?: dependency_1.google.protobuf.Timestamp;
            last_modified_time?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("resource_version" in data && data.resource_version != undefined) {
                    this.resource_version = data.resource_version;
                }
                if ("spec" in data && data.spec != undefined) {
                    this.spec = data.spec;
                }
                if ("state" in data && data.state != undefined) {
                    this.state = data.state;
                }
                if ("async_operation_id" in data && data.async_operation_id != undefined) {
                    this.async_operation_id = data.async_operation_id;
                }
                if ("created_time" in data && data.created_time != undefined) {
                    this.created_time = data.created_time;
                }
                if ("last_modified_time" in data && data.last_modified_time != undefined) {
                    this.last_modified_time = data.last_modified_time;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get resource_version() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set resource_version(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get spec() {
            return pb_1.Message.getWrapperField(this, UserGroupSpec, 3) as UserGroupSpec;
        }
        set spec(value: UserGroupSpec) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_spec() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get state() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set state(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get async_operation_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set async_operation_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get created_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 6) as dependency_1.google.protobuf.Timestamp;
        }
        set created_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_created_time() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get last_modified_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 7) as dependency_1.google.protobuf.Timestamp;
        }
        set last_modified_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_last_modified_time() {
            return pb_1.Message.getField(this, 7) != null;
        }
        static fromObject(data: {
            id?: string;
            resource_version?: string;
            spec?: ReturnType<typeof UserGroupSpec.prototype.toObject>;
            state?: string;
            async_operation_id?: string;
            created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            last_modified_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): UserGroup {
            const message = new UserGroup({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.resource_version != null) {
                message.resource_version = data.resource_version;
            }
            if (data.spec != null) {
                message.spec = UserGroupSpec.fromObject(data.spec);
            }
            if (data.state != null) {
                message.state = data.state;
            }
            if (data.async_operation_id != null) {
                message.async_operation_id = data.async_operation_id;
            }
            if (data.created_time != null) {
                message.created_time = dependency_1.google.protobuf.Timestamp.fromObject(data.created_time);
            }
            if (data.last_modified_time != null) {
                message.last_modified_time = dependency_1.google.protobuf.Timestamp.fromObject(data.last_modified_time);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                resource_version?: string;
                spec?: ReturnType<typeof UserGroupSpec.prototype.toObject>;
                state?: string;
                async_operation_id?: string;
                created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                last_modified_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.resource_version != null) {
                data.resource_version = this.resource_version;
            }
            if (this.spec != null) {
                data.spec = this.spec.toObject();
            }
            if (this.state != null) {
                data.state = this.state;
            }
            if (this.async_operation_id != null) {
                data.async_operation_id = this.async_operation_id;
            }
            if (this.created_time != null) {
                data.created_time = this.created_time.toObject();
            }
            if (this.last_modified_time != null) {
                data.last_modified_time = this.last_modified_time.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.resource_version.length)
                writer.writeString(2, this.resource_version);
            if (this.has_spec)
                writer.writeMessage(3, this.spec, () => this.spec.serialize(writer));
            if (this.state.length)
                writer.writeString(4, this.state);
            if (this.async_operation_id.length)
                writer.writeString(5, this.async_operation_id);
            if (this.has_created_time)
                writer.writeMessage(6, this.created_time, () => this.created_time.serialize(writer));
            if (this.has_last_modified_time)
                writer.writeMessage(7, this.last_modified_time, () => this.last_modified_time.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UserGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UserGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.resource_version = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.spec, () => message.spec = UserGroupSpec.deserialize(reader));
                        break;
                    case 4:
                        message.state = reader.readString();
                        break;
                    case 5:
                        message.async_operation_id = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.created_time, () => message.created_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.last_modified_time, () => message.last_modified_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UserGroup {
            return UserGroup.deserialize(bytes);
        }
    }
    export class ServiceAccount extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            resource_version?: string;
            spec?: ServiceAccountSpec;
            state?: string;
            async_operation_id?: string;
            created_time?: dependency_1.google.protobuf.Timestamp;
            last_modified_time?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("resource_version" in data && data.resource_version != undefined) {
                    this.resource_version = data.resource_version;
                }
                if ("spec" in data && data.spec != undefined) {
                    this.spec = data.spec;
                }
                if ("state" in data && data.state != undefined) {
                    this.state = data.state;
                }
                if ("async_operation_id" in data && data.async_operation_id != undefined) {
                    this.async_operation_id = data.async_operation_id;
                }
                if ("created_time" in data && data.created_time != undefined) {
                    this.created_time = data.created_time;
                }
                if ("last_modified_time" in data && data.last_modified_time != undefined) {
                    this.last_modified_time = data.last_modified_time;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get resource_version() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set resource_version(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get spec() {
            return pb_1.Message.getWrapperField(this, ServiceAccountSpec, 3) as ServiceAccountSpec;
        }
        set spec(value: ServiceAccountSpec) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_spec() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get state() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set state(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get async_operation_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set async_operation_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get created_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 6) as dependency_1.google.protobuf.Timestamp;
        }
        set created_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_created_time() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get last_modified_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 7) as dependency_1.google.protobuf.Timestamp;
        }
        set last_modified_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_last_modified_time() {
            return pb_1.Message.getField(this, 7) != null;
        }
        static fromObject(data: {
            id?: string;
            resource_version?: string;
            spec?: ReturnType<typeof ServiceAccountSpec.prototype.toObject>;
            state?: string;
            async_operation_id?: string;
            created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            last_modified_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): ServiceAccount {
            const message = new ServiceAccount({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.resource_version != null) {
                message.resource_version = data.resource_version;
            }
            if (data.spec != null) {
                message.spec = ServiceAccountSpec.fromObject(data.spec);
            }
            if (data.state != null) {
                message.state = data.state;
            }
            if (data.async_operation_id != null) {
                message.async_operation_id = data.async_operation_id;
            }
            if (data.created_time != null) {
                message.created_time = dependency_1.google.protobuf.Timestamp.fromObject(data.created_time);
            }
            if (data.last_modified_time != null) {
                message.last_modified_time = dependency_1.google.protobuf.Timestamp.fromObject(data.last_modified_time);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                resource_version?: string;
                spec?: ReturnType<typeof ServiceAccountSpec.prototype.toObject>;
                state?: string;
                async_operation_id?: string;
                created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                last_modified_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.resource_version != null) {
                data.resource_version = this.resource_version;
            }
            if (this.spec != null) {
                data.spec = this.spec.toObject();
            }
            if (this.state != null) {
                data.state = this.state;
            }
            if (this.async_operation_id != null) {
                data.async_operation_id = this.async_operation_id;
            }
            if (this.created_time != null) {
                data.created_time = this.created_time.toObject();
            }
            if (this.last_modified_time != null) {
                data.last_modified_time = this.last_modified_time.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.resource_version.length)
                writer.writeString(2, this.resource_version);
            if (this.has_spec)
                writer.writeMessage(3, this.spec, () => this.spec.serialize(writer));
            if (this.state.length)
                writer.writeString(4, this.state);
            if (this.async_operation_id.length)
                writer.writeString(5, this.async_operation_id);
            if (this.has_created_time)
                writer.writeMessage(6, this.created_time, () => this.created_time.serialize(writer));
            if (this.has_last_modified_time)
                writer.writeMessage(7, this.last_modified_time, () => this.last_modified_time.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ServiceAccount {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ServiceAccount();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.resource_version = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.spec, () => message.spec = ServiceAccountSpec.deserialize(reader));
                        break;
                    case 4:
                        message.state = reader.readString();
                        break;
                    case 5:
                        message.async_operation_id = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.created_time, () => message.created_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.last_modified_time, () => message.last_modified_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ServiceAccount {
            return ServiceAccount.deserialize(bytes);
        }
    }
    export class ServiceAccountSpec extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            access?: Access;
            description?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("access" in data && data.access != undefined) {
                    this.access = data.access;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get access() {
            return pb_1.Message.getWrapperField(this, Access, 2) as Access;
        }
        set access(value: Access) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_access() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            name?: string;
            access?: ReturnType<typeof Access.prototype.toObject>;
            description?: string;
        }): ServiceAccountSpec {
            const message = new ServiceAccountSpec({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.access != null) {
                message.access = Access.fromObject(data.access);
            }
            if (data.description != null) {
                message.description = data.description;
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                access?: ReturnType<typeof Access.prototype.toObject>;
                description?: string;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.access != null) {
                data.access = this.access.toObject();
            }
            if (this.description != null) {
                data.description = this.description;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.has_access)
                writer.writeMessage(2, this.access, () => this.access.serialize(writer));
            if (this.description.length)
                writer.writeString(3, this.description);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ServiceAccountSpec {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ServiceAccountSpec();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.access, () => message.access = Access.deserialize(reader));
                        break;
                    case 3:
                        message.description = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ServiceAccountSpec {
            return ServiceAccountSpec.deserialize(bytes);
        }
    }
    export class ApiKey extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            resource_version?: string;
            spec?: ApiKeySpec;
            state?: string;
            async_operation_id?: string;
            created_time?: dependency_1.google.protobuf.Timestamp;
            last_modified_time?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("resource_version" in data && data.resource_version != undefined) {
                    this.resource_version = data.resource_version;
                }
                if ("spec" in data && data.spec != undefined) {
                    this.spec = data.spec;
                }
                if ("state" in data && data.state != undefined) {
                    this.state = data.state;
                }
                if ("async_operation_id" in data && data.async_operation_id != undefined) {
                    this.async_operation_id = data.async_operation_id;
                }
                if ("created_time" in data && data.created_time != undefined) {
                    this.created_time = data.created_time;
                }
                if ("last_modified_time" in data && data.last_modified_time != undefined) {
                    this.last_modified_time = data.last_modified_time;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get resource_version() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set resource_version(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get spec() {
            return pb_1.Message.getWrapperField(this, ApiKeySpec, 3) as ApiKeySpec;
        }
        set spec(value: ApiKeySpec) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_spec() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get state() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set state(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get async_operation_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set async_operation_id(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get created_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 6) as dependency_1.google.protobuf.Timestamp;
        }
        set created_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_created_time() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get last_modified_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 7) as dependency_1.google.protobuf.Timestamp;
        }
        set last_modified_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_last_modified_time() {
            return pb_1.Message.getField(this, 7) != null;
        }
        static fromObject(data: {
            id?: string;
            resource_version?: string;
            spec?: ReturnType<typeof ApiKeySpec.prototype.toObject>;
            state?: string;
            async_operation_id?: string;
            created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            last_modified_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): ApiKey {
            const message = new ApiKey({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.resource_version != null) {
                message.resource_version = data.resource_version;
            }
            if (data.spec != null) {
                message.spec = ApiKeySpec.fromObject(data.spec);
            }
            if (data.state != null) {
                message.state = data.state;
            }
            if (data.async_operation_id != null) {
                message.async_operation_id = data.async_operation_id;
            }
            if (data.created_time != null) {
                message.created_time = dependency_1.google.protobuf.Timestamp.fromObject(data.created_time);
            }
            if (data.last_modified_time != null) {
                message.last_modified_time = dependency_1.google.protobuf.Timestamp.fromObject(data.last_modified_time);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                resource_version?: string;
                spec?: ReturnType<typeof ApiKeySpec.prototype.toObject>;
                state?: string;
                async_operation_id?: string;
                created_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                last_modified_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.resource_version != null) {
                data.resource_version = this.resource_version;
            }
            if (this.spec != null) {
                data.spec = this.spec.toObject();
            }
            if (this.state != null) {
                data.state = this.state;
            }
            if (this.async_operation_id != null) {
                data.async_operation_id = this.async_operation_id;
            }
            if (this.created_time != null) {
                data.created_time = this.created_time.toObject();
            }
            if (this.last_modified_time != null) {
                data.last_modified_time = this.last_modified_time.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.resource_version.length)
                writer.writeString(2, this.resource_version);
            if (this.has_spec)
                writer.writeMessage(3, this.spec, () => this.spec.serialize(writer));
            if (this.state.length)
                writer.writeString(4, this.state);
            if (this.async_operation_id.length)
                writer.writeString(5, this.async_operation_id);
            if (this.has_created_time)
                writer.writeMessage(6, this.created_time, () => this.created_time.serialize(writer));
            if (this.has_last_modified_time)
                writer.writeMessage(7, this.last_modified_time, () => this.last_modified_time.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ApiKey {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ApiKey();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.resource_version = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.spec, () => message.spec = ApiKeySpec.deserialize(reader));
                        break;
                    case 4:
                        message.state = reader.readString();
                        break;
                    case 5:
                        message.async_operation_id = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.created_time, () => message.created_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.last_modified_time, () => message.last_modified_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ApiKey {
            return ApiKey.deserialize(bytes);
        }
    }
    export class ApiKeySpec extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            owner_id?: string;
            owner_type?: string;
            display_name?: string;
            description?: string;
            expiry_time?: dependency_1.google.protobuf.Timestamp;
            disabled?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("owner_id" in data && data.owner_id != undefined) {
                    this.owner_id = data.owner_id;
                }
                if ("owner_type" in data && data.owner_type != undefined) {
                    this.owner_type = data.owner_type;
                }
                if ("display_name" in data && data.display_name != undefined) {
                    this.display_name = data.display_name;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("expiry_time" in data && data.expiry_time != undefined) {
                    this.expiry_time = data.expiry_time;
                }
                if ("disabled" in data && data.disabled != undefined) {
                    this.disabled = data.disabled;
                }
            }
        }
        get owner_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set owner_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get owner_type() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set owner_type(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get display_name() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set display_name(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get expiry_time() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 5) as dependency_1.google.protobuf.Timestamp;
        }
        set expiry_time(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_expiry_time() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get disabled() {
            return pb_1.Message.getFieldWithDefault(this, 6, false) as boolean;
        }
        set disabled(value: boolean) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            owner_id?: string;
            owner_type?: string;
            display_name?: string;
            description?: string;
            expiry_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            disabled?: boolean;
        }): ApiKeySpec {
            const message = new ApiKeySpec({});
            if (data.owner_id != null) {
                message.owner_id = data.owner_id;
            }
            if (data.owner_type != null) {
                message.owner_type = data.owner_type;
            }
            if (data.display_name != null) {
                message.display_name = data.display_name;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.expiry_time != null) {
                message.expiry_time = dependency_1.google.protobuf.Timestamp.fromObject(data.expiry_time);
            }
            if (data.disabled != null) {
                message.disabled = data.disabled;
            }
            return message;
        }
        toObject() {
            const data: {
                owner_id?: string;
                owner_type?: string;
                display_name?: string;
                description?: string;
                expiry_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                disabled?: boolean;
            } = {};
            if (this.owner_id != null) {
                data.owner_id = this.owner_id;
            }
            if (this.owner_type != null) {
                data.owner_type = this.owner_type;
            }
            if (this.display_name != null) {
                data.display_name = this.display_name;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.expiry_time != null) {
                data.expiry_time = this.expiry_time.toObject();
            }
            if (this.disabled != null) {
                data.disabled = this.disabled;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.owner_id.length)
                writer.writeString(1, this.owner_id);
            if (this.owner_type.length)
                writer.writeString(2, this.owner_type);
            if (this.display_name.length)
                writer.writeString(3, this.display_name);
            if (this.description.length)
                writer.writeString(4, this.description);
            if (this.has_expiry_time)
                writer.writeMessage(5, this.expiry_time, () => this.expiry_time.serialize(writer));
            if (this.disabled != false)
                writer.writeBool(6, this.disabled);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ApiKeySpec {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ApiKeySpec();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.owner_id = reader.readString();
                        break;
                    case 2:
                        message.owner_type = reader.readString();
                        break;
                    case 3:
                        message.display_name = reader.readString();
                        break;
                    case 4:
                        message.description = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.expiry_time, () => message.expiry_time = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 6:
                        message.disabled = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ApiKeySpec {
            return ApiKeySpec.deserialize(bytes);
        }
    }
}
